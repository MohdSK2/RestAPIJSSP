!function(){function e(e,t,s){"true"==s.DEBUG&&console.log(`ERROR: ${t}\r\n${e}`)}var t={displayName:"World Universities",description:"Return a list of universities of a given country",properties:{domains:{displayName:"domains",type:"string",description:"domains"},web_pages:{displayName:"Web Pages",type:"string",description:"Web Pages"},name:{displayName:"University Name",type:"string",description:"University Name"},alpha_two_code:{displayName:"alpha_two_code",type:"string"},"state-province":{displayName:"state-province",type:"string",description:"state-province"},country:{displayName:"country",type:"string",description:"country"}},methods:{GetUniversitiesList:{displayName:"Get Universities List",type:"list",requiredParameters:["country"],outputs:["domains","web-pages","name","alpha_two_code","state-province","country"]}}};async function s(t,s,r,i){switch(t){case"GetUniversitiesList":await async function(t,s,r){return new Promise((async(t,i)=>{try{let i,o={},n=[];var a=new XMLHttpRequest;let c,p=s=>{if(200===(a=s).status){if(i=JSON.parse(a.responseText),i.length>0)for(var c=0;c<i.length;c++)o={domains:i[c].domains[0],web_pages:i[c].web_pages[0],name:i[c].name,alpha_two_code:i[c].alpha_two_code,"state-province":i[c]["state-province"],country:i[c].country},n.push(o);return console.log(n),postResult(n),void t()}400===a.status&&(e(i.error.message,"WorldUniversities.onexecuteGetUniversitiesList",r),t())};c=(""!==s.country&&void 0!==s.country&&s.country,`${r.K2BaseUrl}search?country=${s.country}`),await function(t,s,r,i){return new Promise(((a,o)=>{var n=new XMLHttpRequest;n.onreadystatechange=function(){try{if(4!==n.readyState)return;if(200!==n.status&&404!=n.status)throw new Error("Failed with status "+n.status+" statustext: "+n.statusText);i(n),a()}catch(e){console.log("executexhr error: "+e+" xhr.responseText: "+n.responseText),o(e)}},n.onerror=function(){Error("Failed with status "+n.status),e("executexhr onerror: Failed with status "+n.status,"HTTP Respnonse",t),o(new Error("Failed with status "+n.status))},console.log("executexhr "+s+" url: "+r),n.open(s,r),n.setRequestHeader("content-type","application/json;odata.metadata=minimal;odata.streaming=true;IEEE754Compatible=false;charset=utf-8"),n.send()}))}(r,"GET",c,p)}catch(t){e(`${t.message} \rError stack:${t.stack}`,"WorldUniversities.onexecuteGetUniversitiesList",r),i(t)}}))}(0,r,i);break;default:throw new Error(`The method ${t} is not supported.`)}}metadata={systemName:"com.k2.WorldUniversities",displayName:"JSSP - WorldUniversities",description:"JSSP - WorldUniversities",configuration:{MSGraphAPIURL:{displayName:"MS Graph API URL",type:"string",value:"https://graph.microsoft.com/v1.0/",required:!0},K2BaseUrl:{displayName:"K2 Base URL",type:"string",value:"http://universities.hipolabs.com/",required:!0},DEBUG:{displayName:"DEBUG",type:"boolean",value:!0}}},ondescribe=async function({configuration:e}){console.log("ondescribe"),postSchema({objects:{WorldUniversities:t}})},onexecute=async function({objectName:e,methodName:t,parameters:r,properties:i,configuration:a}){switch(e){case"WorldUniversities":await s(t,0,r,a);break;default:throw new Error("The object "+e+" is not supported.")}}}();
//# sourceMappingURL=JSSP.WorldUniversities.jssp.map
