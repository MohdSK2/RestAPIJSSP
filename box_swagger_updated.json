{
  "swagger": "2.0",
  "info": {
    "title": "Box Platform API",
    "description": "[Box Platform](https://box.dev) provides functionality to provide access to content stored within [Box](https://box.com). It provides endpoints for basic manipulation of files and folders, management of users within an enterprise, as well as more complex topics such as legal holds and retention policies.",
    "termsOfService": "https://cloud.app.box.com/s/rmwxu64h1ipr41u49w3bbuvbsa29wku9",
    "contact": {
      "name": "Box, Inc",
      "url": "https://box.dev",
      "email": "devrel@box.com"
    },
    "license": {
      "name": "Apache-2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    },
    "version": "2.0.0"
  },
  "host": "api.box.com",
  "basePath": "/2.0",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/files/{file_id}": {
      "get": {
        "operationId": "get_files_id",
        "summary": "Get file information",
        "tags": ["Files"],
        "description": "Retrieves the details about a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.\n\nAdditionally this field can be used to query any metadata\napplied to the file by specifying the `metadata` field as well\nas the scope and key of the template to retrieve, for example\n`?field=metadata.enterprise_12345.contractTemplate`.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "if-none-match",
            "description": "Ensures an item is only returned if it has changed.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `304 Not Modified` if the item has not\nchanged since.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "boxapi",
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "x-rep-hints",
            "description": "A header required to request specific `representations`\nof a file. Use this in combination with the `fields` query\nparameter to request a specific file representation.\n\nThe general format for these representations is\n`X-Rep-Hints: [...]` where `[...]` is one or many\nhints in the format `[fileType?query]`.\n\nFor example, to request a `png` representation in `32x32`\nas well as `94x94` pixel dimensions provide the following\nhints.\n\n`X-Rep-Hints: [jpg?dimensions=32x32][jpg?dimensions=94x94]`\n\nAdditionally, a `text` representation is available for all\ndocument file types in Box using the `[extracted_text]`\nrepresentation.\n\n`X-Rep-Hints: [extracted_text]`",
            "in": "header",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "$ref": "#/definitions/File"
          },
          "304": {
            "description": "Returns an empty response when the `If-None-Match` header matches\nthe current `etag` value of the folder. This indicates that the folder\nhas not changed since it was last requested."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "$ref": "#/definitions/ClientError"
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "$ref": "#/definitions/ClientError"
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "$ref": "#/definitions/ClientError"
          },
          "415": {
            "description": "Returns an error if an action is performed on a file with an\nincorrect media type.\n\n* `unsupported_media_type` when requesting an `expiring_embed_link`\n  for a file that is not supported by Box Embed.",
            "$ref": "#/definitions/ClientError"
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      },
      "post": {
        "operationId": "post_files_id",
        "summary": "Restore file",
        "tags": ["Trashed files"],
        "description": "Restores a file that has been moved to the trash.\n\nAn optional new parent ID can be provided to restore the file to in case the\noriginal folder has been deleted.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "description": "An optional new name for the file.",
                  "type": "string"
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of parent item"
                        }
                      }
                    },
                    {
                      "description": "Specifies an optional ID of a folder to restore the file to\nwhen the original folder no longer exists.\n\nPlease be aware that this ID will only be used if the original\nfolder no longer exists. Use this ID to provide a fallback\nlocation to restore the file to if the original location\nhas been deleted."
                    }
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Returns a file object when the file has been restored.",
            "$ref": "#/definitions/File"
          },
          "403": {
            "description": "Returns an error if the user does not have access to the folder\nthe file is being restored to, or the user does not have permission\nto restore files from the trash.",
            "$ref": "#/definitions/ClientError"
          },
          "404": {
            "description": "Returns an error if the file is not in the trash.",
            "$ref": "#/definitions/ClientError"
          },
          "409": {
            "description": "Returns an error if there is an file with the same name\nin the folder the file is being restored to.",
            "$ref": "#/definitions/ClientError"
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      },
      "put": {
        "operationId": "put_files_id",
        "summary": "Update file",
        "tags": ["Files"],
        "description": "Updates a file. This can be used to rename or move a file,\ncreate a shared link, or lock a file.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "fields",
            "description": "A comma-separated list of attributes to include in the\nresponse. This can be used to request fields that are\nnot normally returned in a standard response.\n\nBe aware that specifying this parameter will have the\neffect that none of the standard fields are returned in\nthe response unless explicitly specified, instead only\nfields for the mini representation are returned, additional\nto the fields requested.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "if-match",
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "An optional different name for the file. This can be used to\nrename the file."
                },
                "description": {
                  "type": "string",
                  "description": "The description for a file. This can be seen in the right-hand sidebar panel\nwhen viewing a file in the Box web app. Additionally, this index is used in\nthe search index of the file, allowing users to find the file by the content\nin the description.",
                  "maxLength": 256
                },
                "parent": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "The parent for this item",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of parent item"
                        }
                      }
                    },
                    {
                      "description": "An optional new parent folder for the file. This can be used\nto move the file to a new folder."
                    }
                  ]
                },
                "shared_link": {
                  "allOf": [
                    {
                      "description": "Defines a shared link for an item. Set this to `null` to remove\nthe shared link.",
                      "type": "object",
                      "properties": {
                        "access": {
                          "type": "string",
                          "description": "The level of access for the shared link. This can be\nrestricted to anyone with the link (`open`), only people\nwithin the company (`company`) and only those who\nhave been invited to the folder (`collaborators`).\n\nIf not set, this field defaults to the access level specified\nby the enterprise admin. To create a shared link with this\ndefault setting pass the `shared_link` object with\nno `access` field, for example `{ \"shared_link\": {} }`.\n\nThe `company` access level is only available to paid\naccounts.",
                          "enum": ["open", "company", "collaborators"]
                        },
                        "password": {
                          "type": "string",
                          "description": "The password required to access the shared link. Set the\npassword to `null` to remove it.\n\nA password can only be set when `access` is set to `open`."
                        },
                        "vanity_name": {
                          "type": "string",
                          "description": "Defines a custom vanity name to use in the shared link URL,\nfor example `https://app.box.com/v/my-shared-link`.\n\nCustom URLs should not be used when sharing sensitive content\nas vanity URLs are a lot easier to guess than regular shared links."
                        },
                        "unshared_at": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The timestamp at which this shared link will\nexpire. This field can only be set by\nusers with paid accounts."
                        },
                        "permissions": {
                          "type": "object",
                          "properties": {
                            "can_download": {
                              "type": "boolean",
                              "description": "If the shared link allows for downloading of files.\nThis can only be set when `access` is set to\n`open` or `company`."
                            }
                          }
                        }
                      }
                    },
                    {
                      "description": "Defines a shared link for a file. Set this to `null` to remove\nthe shared link."
                    }
                  ]
                },
                "lock": {
                  "type": "object",
                  "description": "Defines a lock on an item. This prevents the item from being\nmoved, renamed, or otherwise changed by anyone other than the user\nwho created the lock.\n\nSet this to `null` to remove the lock.",
                  "required": ["type"],
                  "properties": {
                    "access": {
                      "type": "string",
                      "description": "The type of this object.",
                      "enum": ["lock"]
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Defines the time at which the lock expires."
                    },
                    "is_download_prevented": {
                      "type": "boolean",
                      "description": "Defines if the file can be downloaded while it is locked."
                    }
                  }
                },
                "permissions": {
                  "description": "Defines who can download a file.",
                  "type": "object",
                  "properties": {
                    "can_download": {
                      "description": "Defines who is allowed to download this file. The possible\nvalues are either `open` for everyone or `company` for\nthe other members of the user's enterprise.\n\nThis setting overrides the download permissions that are\nnormally part of the `role` of a collaboration. When set to\n`company`, this essentially removes the download option for\nexternal users with `viewer` or `editor` a roles.",
                      "type": "string",
                      "enum": ["open", "company"]
                    }
                  }
                },
                "tags": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "minItems": 1,
                  "maxItems": 100,
                  "description": "The tags for this item. These tags are shown in\nthe Box web app and mobile apps next to an item.\n\nTo add or remove a tag, retrieve the item's current tags,\nmodify them, and then update this field.\n\nThere is a limit of 100 tags per item, and 10,000\nunique tags per enterprise."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a file object.\n\nNot all available fields are returned by default. Use the\n[fields](#param-fields) query parameter to explicitly request\nany specific fields.",
            "$ref": "#/definitions/File"
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "$ref": "#/definitions/ClientError"
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access the destination folder to move the file to.",
            "$ref": "#/definitions/ClientError"
          },
          "404": {
            "description": "Returned if the file is not found, or the user does not\nhave access to the file.",
            "$ref": "#/definitions/ClientError"
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "$ref": "#/definitions/ClientError"
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "$ref": "#/definitions/ClientError"
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      },
      "delete": {
        "operationId": "delete_files_id",
        "summary": "Delete file",
        "tags": ["Files"],
        "description": "Deletes a file, either permanently or by moving it to\nthe trash.\n\nThe the enterprise settings determine whether the item will\nbe permanently deleted from Box or moved to the trash.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "if-match",
            "description": "Ensures this item hasn't recently changed before\nmaking changes.\n\nPass in the item's last observed `etag` value\ninto this header and the endpoint will fail\nwith a `412 Precondition Failed` if it\nhas changed since.",
            "in": "header",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Returns an empty response when the file has been successfully\ndeleted."
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "$ref": "#/definitions/ClientError"
          },
          "404": {
            "description": "Returned if the file is not found or has already been deleted, or the user\ndoes not have access to the file.",
            "$ref": "#/definitions/ClientError"
          },
          "405": {
            "description": "Returned if the `file_id` is not in a recognized format.",
            "$ref": "#/definitions/ClientError"
          },
          "412": {
            "description": "Returns an error when the `If-Match` header does not match\nthe current `etag` value of the file. This indicates that the file\nhas changed since it was last requested.",
            "$ref": "#/definitions/ClientError"
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      }
    },
    "/files/{file_id}/content": {
      "get": {
        "operationId": "get_files_id_content",
        "summary": "Download file",
        "tags": ["Downloads"],
        "description": "Returns the contents of a file in binary format.",
        "parameters": [
          {
            "name": "file_id",
            "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "range",
            "description": "The byte range of the content to download.\n\nThe format `{start_byte}-{end_byte}` can be used to specify\nwhat section of the file to download.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "boxapi",
            "description": "The URL, and optional password, for the shared link of this item.\n\nThis header can be used to access items that have not been\nexplicitly shared with a user.\n\nUse the format `shared_link=[link]` or if a password is required then\nuse `shared_link=[link]&shared_link_password=[password]`.\n\nThis header can be used on the file or folder shared, as well as on any files\nor folders nested within the item.",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name": "version",
            "description": "The file version to download",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "access_token",
            "description": "An optional access token that can be used to pre-authenticate this request, which means that a download link can be shared with a browser or a third party service without them needing to know how to handle the authentication.\nWhen using this parameter, please make sure that the access token is sufficiently scoped down to only allow read access to that file and no other files or folders.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "202": {
            "description": "If the file is not ready to be downloaded yet `Retry-After` header will\nbe returned indicating the time in seconds after which the file will\nbe available for the client to download.\n\nThis response can occur when the file was uploaded immediately before the\ndownload request.",
            "headers": {
              "Retry-After": {
                "description": "The time in seconds after which to retry the download",
                "type": "integer"
              }
            }
          },
          "302": {
            "description": "If the file is available to be downloaded the response will include a\n`Location` header for the file on `dl.boxcloud.com`.\n\nThe `dl.boxcloud.com` URL is not persistent and clients will need\nto follow the redirect in order to actually download the file.",
            "headers": {
              "Location": {
                "description": "A pointer to the download URL",
                "type": "string",
                "format": "url"
              }
            }
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      }
    },
    "/file_requests/{file_request_id}/copy": {
      "post": {
        "operationId": "post_file_requests_id_copy",
        "summary": "Copy file request",
        "tags": ["File requests"],
        "description": "Copies an existing file request that is already present on one folder,\nand applies it to another folder.",
        "parameters": [
          {
            "name": "file_request_id",
            "description": "The unique identifier that represent a file request.\n\nThe ID for any file request can be determined\nby visiting a file request builder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/filerequest/123`\nthe `file_request_id` is `123`.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "$ref": "#/definitions/FileRequestCopyRequest"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns updated file request object.",
            "$ref": "#/definitions/FileRequest"
          },
          "401": {
            "description": "Returned when the access token provided in the `Authorization` header\nis not recognized or not provided.",
            "$ref": "#/definitions/ClientError"
          },
          "403": {
            "description": "Returned if the user does not have all the permissions to complete the\nupdate.\n\n* `access_denied_insufficient_permissions` when the authenticated user\ndoes not have access to update the file request.",
            "$ref": "#/definitions/ClientError"
          },
          "404": {
            "description": "Returned if the file request is not found, or the user does not\nhave access to the associated folder.",
            "$ref": "#/definitions/ClientError"
          },
          "405": {
            "description": "Returned if the `file_request_id` is not in a recognized format.",
            "$ref": "#/definitions/ClientError"
          },
          "default": {
            "description": "An unexpected client error.",
            "$ref": "#/definitions/ClientError"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "tokenUrl": "https://api.box.com/oauth2/token",
      "scopes": {
        "root_readonly": "Read all files and folders stored in Box",
        "root_readwrite": "Read and write all files and folders stored in Box",
        "manage_app_users": "Provision and manage app users",
        "manage_managed_users": "Provision and manage managed users",
        "manage_groups": "Manage an enterprise's groups",
        "manage_webhook": "Create webhooks programmatically through the API",
        "manage_enterprise_properties": "Manage enterprise properties",
        "manage_data_retention": "Manage data retention polices",
        "manage_legal_hold": "Manage Legal Holds"
      }
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "definitions": {
    "File": {
      "title": "File",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A standard representation of a file, as returned from any\nfile API endpoints by default",
      "allOf": [
        {
          "$ref": "#/definitions/File--Mini"
        },
        {
          "properties": {
            "description": {
              "type": "string",
              "description": "The optional description of this file",
              "maxLength": 256
            },
            "size": {
              "type": "integer",
              "description": "The file size in bytes. Be careful parsing this integer as it can\nget very large and cause an integer overflow."
            },
            "path_collection": {
              "allOf": [
                {
                  "title": "Path collection",
                  "description": "A list of parent folders for an item.",
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of folders in this list.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "entries": {
                      "type": "array",
                      "description": "The parent folders for this item",
                      "items": {
                        "$ref": "#/definitions/Folder--Mini"
                      }
                    }
                  }
                },
                {
                  "description": "The tree of folders that this file is contained in,\nstarting at the root."
                },
                {}
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the file was created on Box."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the file was last updated on Box."
            },
            "trashed_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which this file was put in the trash."
            },
            "purged_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which this file is expected to be purged\nfrom the trash."
            },
            "content_created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time at which this file was originally\ncreated, which might be before it was uploaded to Box."
            },
            "content_modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time at which this file was last updated,\nwhich might be before it was uploaded to Box."
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this file"
                }
              ]
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this file"
                },
                {}
              ]
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this file"
                },
                {}
              ]
            },
            "shared_link": {
              "allOf": [
                {
                  "title": "Shared link",
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "url",
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link."
                    },
                    "download_url": {
                      "type": "string",
                      "format": "url",
                      "x-box-premium-feature": true,
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders."
                    },
                    "vanity_url": {
                      "type": "string",
                      "format": "url",
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application."
                    },
                    "vanity_name": {
                      "type": "string",
                      "description": "The custom name of a shared link, as used in the `vanity_url` field."
                    },
                    "access": {
                      "type": "string",
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_access": {
                      "type": "string",
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_permission": {
                      "type": "string",
                      "description": "The effective permissions for this shared link.",
                      "enum": ["can_download", "can_preview"]
                    },
                    "unshared_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts."
                    },
                    "is_password_enabled": {
                      "type": "boolean",
                      "description": "Defines if the shared link requires a password to access the item."
                    },
                    "permissions": {
                      "type": "object",
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`."
                        },
                        "can_preview": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder."
                        }
                      }
                    },
                    "download_count": {
                      "type": "integer",
                      "description": "The number of times this item has been downloaded."
                    },
                    "preview_count": {
                      "type": "integer",
                      "description": "The number of times this item has been previewed."
                    }
                  }
                },
                {
                  "description": "The shared link for this file. This will be\n`null` if no shared link has been created for this\nfile."
                },
                {}
              ]
            },
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The folder that this file is located within."
                }
              ]
            },
            "item_status": {
              "type": "string",
              "description": "Defines if this item has been deleted or not.\n\n* `active` when the item has is not in the trash\n* `trashed` when the item has been moved to the trash but not deleted\n* `deleted` when the item has been permanently deleted.",
              "enum": ["active", "trashed", "deleted"]
            }
          }
        }
      ]
    },
    "ClientError": {
      "title": "Client error",
      "type": "object",
      "description": "A generic error",
      "properties": {
        "type": {
          "description": "`error`",
          "type": "string",
          "enum": ["error"]
        },
        "status": {
          "description": "The HTTP status of the response.",
          "type": "integer",
          "format": "int32"
        },
        "code": {
          "description": "A Box-specific error code",
          "type": "string",
          "enum": [
            "created",
            "accepted",
            "no_content",
            "redirect",
            "not_modified",
            "bad_request",
            "unauthorized",
            "forbidden",
            "not_found",
            "method_not_allowed",
            "conflict",
            "precondition_failed",
            "too_many_requests",
            "internal_server_error",
            "unavailable",
            "item_name_invalid",
            "insufficient_scope"
          ]
        },
        "message": {
          "description": "A short message describing the error.",
          "type": "string"
        },
        "context_info": {
          "description": "A free-form object that contains additional context\nabout the error. The possible fields are defined on\na per-endpoint basis.",
          "type": "object"
        },
        "help_url": {
          "description": "A URL that links to more information about why this error occurred.",
          "type": "string"
        },
        "request_id": {
          "description": "A unique identifier for this response, which can be used\nwhen contacting Box support.",
          "type": "string"
        }
      }
    },
    "UploadUrl": {
      "title": "Upload URL",
      "type": "object",
      "description": "The details for the upload session for the file.",
      "properties": {
        "upload_url": {
          "type": "string",
          "description": "A URL for an upload session that can be used to upload\nthe file."
        },
        "upload_token": {
          "type": "string",
          "description": "An optional access token to use to upload the file"
        }
      }
    },
    "ConflictError": {
      "title": "Conflict error",
      "type": "object",
      "description": "The error that occurs when a file can not be created due\nto a conflict.",
      "allOf": [
        {
          "$ref": "#/definitions/ClientError"
        },
        {
          "properties": {
            "context_info": {
              "type": "object",
              "properties": {
                "conflicts": {
                  "type": "array",
                  "description": "A list of the file conflicts that caused this error.",
                  "items": {
                    "$ref": "#/definitions/FileConflict"
                  }
                }
              }
            }
          }
        }
      ]
    },
    "Collaborations": {
      "title": "Collaborations",
      "type": "object",
      "description": "A list of collaborations",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collaboration"
              }
            }
          }
        }
      ]
    },
    "Comments": {
      "title": "Comments",
      "type": "object",
      "description": "A list of comments",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          }
        }
      ]
    },
    "Tasks": {
      "title": "Tasks",
      "type": "object",
      "description": "A list of tasks",
      "properties": {
        "total_count": {
          "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Task"
          }
        }
      }
    },
    "FileVersions": {
      "title": "File versions",
      "type": "object",
      "description": "A list of file versions",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileVersion"
              }
            }
          }
        }
      ]
    },
    "FileVersion": {
      "title": "File version",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A standard representation of a file version",
      "allOf": [
        {
          "$ref": "#/definitions/FileVersion--Mini"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the file version"
            },
            "size": {
              "type": "integer",
              "format": "int64",
              "description": "Size of the file version in bytes"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the file version object was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the file version object was last updated"
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last updated the file version"
                }
              ]
            },
            "trashed_at": {
              "type": "string",
              "description": "When the file version object was trashed.",
              "format": "date-time"
            },
            "trashed_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who trashed the file version"
                }
              ]
            },
            "restored_at": {
              "type": "string",
              "description": "When the file version was restored from the trash.",
              "format": "date-time"
            },
            "restored_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who restored the file version from the trash."
                }
              ]
            },
            "purged_at": {
              "type": "string",
              "description": "When the file version object will be permanently deleted.",
              "format": "date-time"
            },
            "uploader_display_name": {
              "allOf": [
                {
                  "title": "Uploader display name",
                  "type": "string",
                  "description": "The display name of the user that uploaded the file. In most cases this is the\nname of the user logged in at the time of the upload.\n\nIf the file was uploaded using a File Request form that requires the user to\nprovide an email address, this field is populated with that email address. If\nan email address was not required in the File Request form, this field is set\nto return a value of `File Request`.\n\nIn all other anonymous cases where no email was provided this field\nwill default to a value of `Someone`."
                }
              ]
            }
          }
        }
      ]
    },
    "Metadatas": {
      "title": "Metadata instances",
      "type": "object",
      "description": "A list of metadata instances that have been applied to a file or folder.",
      "properties": {
        "entries": {
          "type": "array",
          "description": "A list of metadata instances, as applied to this file or folder.",
          "items": {
            "$ref": "#/definitions/Metadata"
          }
        },
        "limit": {
          "description": "The limit that was used for this page of results.",
          "type": "integer"
        }
      }
    },
    "Classification": {
      "title": "Classification",
      "type": "object",
      "description": "An instance of the classification metadata template, containing\nthe classification applied to the file or folder.\n\nTo get more details about the classification applied to an item,\nrequest the classification metadata template.",
      "properties": {
        "Box__Security__Classification__Key": {
          "type": "string",
          "description": "The name of the classification applied to the item."
        },
        "$parent": {
          "type": "string",
          "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
        },
        "$template": {
          "type": "string",
          "description": "`securityClassification-6VMVochwUWo`",
          "enum": ["securityClassification-6VMVochwUWo"]
        },
        "$scope": {
          "type": "string",
          "description": "The scope of the enterprise that this classification has been\napplied for.\n\nThis will be in the format `enterprise_{enterprise_id}`."
        },
        "$version": {
          "type": "integer",
          "description": "The version of the metadata instance. This version starts at 0 and\nincreases every time a classification is updated."
        },
        "$type": {
          "type": "string",
          "description": "The unique ID of this classification instance. This will be include\nthe name of the classification template and a unique ID."
        },
        "$typeVersion": {
          "type": "number",
          "description": "The version of the metadata template. This version starts at 0 and\nincreases every time the template is updated. This is mostly for internal\nuse."
        },
        "$canEdit": {
          "type": "boolean",
          "description": "Whether an end user can change the classification."
        }
      }
    },
    "Metadata": {
      "title": "Metadata instance",
      "type": "object",
      "x-box-variant": "standard",
      "description": "An instance of a metadata template, which has been applied to a file or\nfolder.",
      "allOf": [
        {
          "$ref": "#/definitions/Metadata--Base"
        }
      ]
    },
    "SkillCardsMetadata": {
      "title": "Skills metadata instance",
      "type": "object",
      "description": "The metadata assigned to a using for Box skills.",
      "properties": {
        "$canEdit": {
          "type": "boolean",
          "description": "Whether the user can edit this metadata"
        },
        "$id": {
          "type": "string",
          "format": "uuid",
          "maxLength": 36,
          "description": "A UUID to identify the metadata object"
        },
        "$parent": {
          "type": "string",
          "description": "An ID for the parent folder"
        },
        "$scope": {
          "type": "string",
          "description": "An ID for the scope in which this template\nhas been applied"
        },
        "$template": {
          "type": "string",
          "description": "The name of the template"
        },
        "$type": {
          "type": "string",
          "description": "A unique identifier for the \"type\" of this instance. This is an internal\nsystem property and should not be used by a client application."
        },
        "$typeVersion": {
          "type": "integer",
          "description": "The last-known version of the template of the object. This is an internal\nsystem property and should not be used by a client application."
        },
        "$version": {
          "type": "integer",
          "description": "The version of the metadata object. Starts at 0 and increases every time\na user-defined property is modified."
        },
        "cards": {
          "type": "array",
          "description": "A list of Box Skill cards that have been applied to this file.",
          "items": {
            "$ref": "#/definitions/SkillCard"
          }
        }
      }
    },
    "SkillCard": {
      "type": "object",
      "title": "Skill Card",
      "description": "A generic Box Skill metadata card.",
      "required": ["type", "skill_card_type", "skill", "invocation"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The optional date and time this card was created at."
        },
        "type": {
          "type": "string",
          "description": "`skill_card`",
          "enum": ["skill_card"]
        },
        "skill_card_type": {
          "type": "string",
          "description": "The type of card to add to the file.",
          "enum": ["transcript", "keyword", "timeline", "status"]
        },
        "skill_card_title": {
          "type": "object",
          "description": "The title of the card.",
          "required": ["message"],
          "properties": {
            "code": {
              "type": "string",
              "description": "An optional identifier for the title."
            },
            "message": {
              "type": "string",
              "description": "The actual title to show in the UI."
            }
          }
        },
        "status": {
          "type": "object",
          "description": "Used with a card of type `status` to set the status of the skill. This can be used to show a message to the user while the Skill is processing the data.",
          "required": ["code"],
          "properties": {
            "code": {
              "type": "string",
              "description": "A code for the status of this Skill invocation. By\ndefault each of these will have their own accompanied\nmessages. These can be adjusted by setting the `message`\nvalue on this object.",
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ]
            },
            "message": {
              "type": "string",
              "description": "A custom message that can be provided with this status.\nThis will be shown in the web app to the end user."
            }
          }
        },
        "skill": {
          "type": "object",
          "description": "The service that applied this metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`service`",
              "enum": ["service"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the service that\napplied this metadata."
            }
          }
        },
        "invocation": {
          "type": "object",
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`skill_invocation`",
              "enum": ["skill_invocation"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata."
            }
          }
        },
        "duration": {
          "type": "integer",
          "description": "An optional total duration in seconds.\n\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
        },
        "entries": {
          "type": "array",
          "description": "An optional list of entries in the metadata card.\n\nThis field is used with a `skill_card_type` of\n`transcript`, `keyword` or `timeline`.",
          "items": {
            "type": "object",
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text of the entry. This would be the actual\nkeyword in a `keyword` card, the line of a\ntranscript in a `transcript` card, or the display\nname for an item when using the `timeline` entry."
              },
              "appears": {
                "type": "array",
                "description": "Defines a list of timestamps for an entry. This is\nused with a `skill_card_type` of `transcript` as\nwell as `timeline` to place items on a timeline.\n\nFor a `skill_card_type` of `transcript` there can\nonly be one entry in this list for each item, and\nonly the `start` time is used to place the\ntranscript on the timeline.",
                "required": ["start", "end"],
                "items": {
                  "type": "object",
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "start": {
                      "type": "integer",
                      "description": "The time in seconds when an\nentry should start appearing on a timeline."
                    },
                    "end": {
                      "type": "integer",
                      "description": "The time in seconds when an\nentry should stop appearing on a timeline. For\na `skill_card_type` of `transcript` this value\nis ignored."
                    }
                  }
                }
              },
              "image_url": {
                "type": "string",
                "description": "The image to show on a for an entry that appears\non a timeline. This image URL is required for any\n`timeline` cards. The image will be shown in a\nlist of items (for example faces), and clicking\nthe image will show the user where that entry\nappears during the duration of this entry."
              }
            }
          }
        }
      }
    },
    "KeywordSkillCard": {
      "type": "object",
      "title": "Keyword Skill Card",
      "description": "A skill card that contains a set of keywords",
      "required": ["type", "skill_card_type", "skill", "invocation", "entries"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The optional date and time this card was created at."
        },
        "type": {
          "type": "string",
          "description": "`skill_card`",
          "enum": ["skill_card"]
        },
        "skill_card_type": {
          "type": "string",
          "description": "`keyword`",
          "enum": ["keyword"]
        },
        "skill_card_title": {
          "type": "object",
          "description": "The title of the card.",
          "required": ["message"],
          "properties": {
            "code": {
              "type": "string",
              "description": "An optional identifier for the title."
            },
            "message": {
              "type": "string",
              "description": "The actual title to show in the UI."
            }
          }
        },
        "skill": {
          "type": "object",
          "description": "The service that applied this metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`service`",
              "enum": ["service"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the service that\napplied this metadata."
            }
          }
        },
        "invocation": {
          "type": "object",
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`skill_invocation`",
              "enum": ["skill_invocation"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata."
            }
          }
        },
        "entries": {
          "type": "array",
          "description": "An list of entries in the metadata card.",
          "items": {
            "type": "object",
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text of the keyword."
              }
            }
          }
        }
      }
    },
    "TimelineSkillCard": {
      "type": "object",
      "title": "Timeline Skill Card",
      "description": "A Box Skill metadata card that places a list of images on a\ntimeline.",
      "required": ["type", "skill_card_type", "skill", "invocation", "entries"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The optional date and time this card was created at."
        },
        "type": {
          "type": "string",
          "description": "`skill_card`",
          "enum": ["skill_card"]
        },
        "skill_card_type": {
          "type": "string",
          "description": "`timeline`",
          "enum": ["timeline"]
        },
        "skill_card_title": {
          "type": "object",
          "description": "The title of the card.",
          "required": ["message"],
          "properties": {
            "code": {
              "type": "string",
              "description": "An optional identifier for the title."
            },
            "message": {
              "type": "string",
              "description": "The actual title to show in the UI."
            }
          }
        },
        "skill": {
          "type": "object",
          "description": "The service that applied this metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`service`",
              "enum": ["service"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the service that\napplied this metadata."
            }
          }
        },
        "invocation": {
          "type": "object",
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`skill_invocation`",
              "enum": ["skill_invocation"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata."
            }
          }
        },
        "duration": {
          "type": "integer",
          "description": "An total duration in seconds of the timeline."
        },
        "entries": {
          "type": "array",
          "description": "A list of entries on the timeline.",
          "items": {
            "type": "object",
            "description": "An single item that's placed on multiple items on the timeline.",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text of the entry. This would be the display\nname for an item being placed on the timeline, for example the name\nof the person who was detected in a video."
              },
              "appears": {
                "type": "array",
                "description": "Defines a list of timestamps for when this item should appear on the\ntimeline.",
                "required": ["start", "end"],
                "items": {
                  "type": "object",
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "start": {
                      "type": "integer",
                      "description": "The time in seconds when an\nentry should start appearing on a timeline."
                    },
                    "end": {
                      "type": "integer",
                      "description": "The time in seconds when an\nentry should stop appearing on a timeline."
                    }
                  }
                }
              },
              "image_url": {
                "type": "string",
                "description": "The image to show on a for an entry that appears\non a timeline. This image URL is required for every entry.\n\nThe image will be shown in a\nlist of items (for example faces), and clicking\nthe image will show the user where that entry\nappears during the duration of this entry."
              }
            }
          }
        }
      }
    },
    "TranscriptSkillCard": {
      "type": "object",
      "title": "Transcript Skill Card",
      "description": "A Box Skill metadata card that adds a transcript to a file.",
      "required": ["type", "skill_card_type", "skill", "invocation", "entries"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The optional date and time this card was created at."
        },
        "type": {
          "type": "string",
          "description": "`skill_card`",
          "enum": ["skill_card"]
        },
        "skill_card_type": {
          "type": "string",
          "description": "`transcript`",
          "enum": ["transcript"]
        },
        "skill_card_title": {
          "type": "object",
          "description": "The title of the card.",
          "required": ["message"],
          "properties": {
            "code": {
              "type": "string",
              "description": "An optional identifier for the title."
            },
            "message": {
              "type": "string",
              "description": "The actual title to show in the UI."
            }
          }
        },
        "skill": {
          "type": "object",
          "description": "The service that applied this metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`service`",
              "enum": ["service"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the service that\napplied this metadata."
            }
          }
        },
        "invocation": {
          "type": "object",
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`skill_invocation`",
              "enum": ["skill_invocation"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata."
            }
          }
        },
        "duration": {
          "type": "integer",
          "description": "An optional total duration in seconds.\n\nUsed with a `skill_card_type` of `transcript` or\n`timeline`."
        },
        "entries": {
          "type": "array",
          "description": "An list of entries for the card. This represents the individual entries of\nthe transcription.",
          "items": {
            "type": "object",
            "description": "An entry in the `entries` attribute of a metadata card",
            "properties": {
              "text": {
                "type": "string",
                "description": "The text of the entry. This would be the transcribed text assigned\nto the entry on the timeline."
              },
              "appears": {
                "type": "array",
                "description": "Defines when a transcribed bit of text appears. This only includes a\nstart time and no end time.",
                "required": ["start"],
                "items": {
                  "type": "object",
                  "description": "The timestamp for an entry.",
                  "properties": {
                    "start": {
                      "type": "integer",
                      "description": "The time in seconds when an\nentry should start appearing on a timeline."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "StatusSkillCard": {
      "type": "object",
      "title": "Status Skill Card",
      "description": "A Box Skill metadata card that puts a status message in the metadata sidebar.",
      "required": ["type", "skill_card_type", "skill", "invocation", "status"],
      "properties": {
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The optional date and time this card was created at."
        },
        "type": {
          "type": "string",
          "description": "`skill_card`",
          "enum": ["skill_card"]
        },
        "skill_card_type": {
          "type": "string",
          "description": "`status`",
          "enum": ["status"]
        },
        "skill_card_title": {
          "type": "object",
          "description": "The title of the card.",
          "required": ["message"],
          "properties": {
            "code": {
              "type": "string",
              "description": "An optional identifier for the title."
            },
            "message": {
              "type": "string",
              "description": "The actual title to show in the UI."
            }
          }
        },
        "status": {
          "type": "object",
          "description": "Sets the status of the skill. This can be used to show a message to the user while the Skill is processing the data, or if it was not able to process the file.",
          "required": ["code"],
          "properties": {
            "code": {
              "type": "string",
              "description": "A code for the status of this Skill invocation. By\ndefault each of these will have their own accompanied\nmessages. These can be adjusted by setting the `message`\nvalue on this object.",
              "enum": [
                "invoked",
                "processing",
                "success",
                "transient_failure",
                "permanent_failure"
              ]
            },
            "message": {
              "type": "string",
              "description": "A custom message that can be provided with this status.\nThis will be shown in the web app to the end user."
            }
          }
        },
        "skill": {
          "type": "object",
          "description": "The service that applied this metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`service`",
              "enum": ["service"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the service that\napplied this metadata."
            }
          }
        },
        "invocation": {
          "type": "object",
          "description": "The invocation of this service, used to track\nwhich instance of a service applied the metadata.",
          "required": ["type", "id"],
          "properties": {
            "type": {
              "type": "string",
              "description": "`skill_invocation`",
              "enum": ["skill_invocation"]
            },
            "id": {
              "type": "string",
              "description": "A custom identifier that represent the instance of\nthe service that applied this metadata. For example,\nif your `image-recognition-service` runs on multiple\nnodes, this field can be used to identify the ID of\nthe node that was used to apply the metadata."
            }
          }
        }
      }
    },
    "Watermark": {
      "title": "Watermark",
      "type": "object",
      "description": "A watermark is a semi-transparent overlay on an embedded file\npreview that displays a viewer's email address or user ID\nand the time of access over a file's content",
      "properties": {
        "watermark": {
          "type": "object",
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this watermark was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this task was modified"
            }
          }
        }
      }
    },
    "FileRequest": {
      "title": "File Request",
      "type": "object",
      "description": "A standard representation of a file request, as returned\nfrom any file request API endpoints by default.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this file request.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "`file-request`",
          "enum": ["file-request"],
          "readOnly": true
        },
        "title": {
          "type": "string",
          "description": "The title of file request. This is shown\nin the Box UI to users uploading files.\n\nThis defaults to title of the file request that was\ncopied to create this file request."
        },
        "description": {
          "type": "string",
          "description": "The optional description of this file request. This is\nshown in the Box UI to users uploading files.\n\nThis defaults to description of the file request that was\ncopied to create this file request."
        },
        "status": {
          "type": "string",
          "description": "The status of the file request. This defaults\nto `active`.\n\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\n\nThis defaults to status of file request that was\ncopied to create this file request.",
          "enum": ["active", "inactive"]
        },
        "is_email_required": {
          "type": "boolean",
          "description": "Whether a file request submitter is required to provide\ntheir email address.\n\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\n\nThis defaults to setting of file request that was\ncopied to create this file request."
        },
        "is_description_required": {
          "type": "boolean",
          "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\n\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\n\nThis defaults to setting of file request that was\ncopied to create this file request."
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date after which a file request will no longer accept new\nsubmissions.\n\nAfter this date, the `status` will automatically be set to\n`inactive`."
        },
        "folder": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The folder that this file request is associated with.\n\nFiles submitted through the file request form will be\nuploaded to this folder."
            }
          ]
        },
        "url": {
          "type": "string",
          "description": "The generated URL for this file request. This URL can be shared\nwith users to let them upload files to the associated folder.",
          "readOnly": true
        },
        "etag": {
          "type": "string",
          "description": "The HTTP `etag` of this file. This can be used in combination with\nthe `If-Match` header when updating a file request. By providing that\nheader, a change will only be performed on the  file request if the `etag`\non the file request still matches the `etag` provided in the `If-Match`\nheader."
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created this file request."
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the file request was created."
        },
        "updated_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who last modified this file request."
            },
            {}
          ]
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date and time when the file request was last updated."
        }
      }
    },
    "FileRequestUpdateRequest": {
      "title": "File Request (Update)",
      "type": "object",
      "description": "The request body to update a file request.",
      "properties": {
        "title": {
          "type": "string",
          "description": "An optional new title for the file request. This can be\nused to change the title of the file request.\n\nThis will default to the value on the existing file request."
        },
        "description": {
          "type": "string",
          "description": "An optional new description for the file request. This can be\nused to change the description of the file request.\n\nThis will default to the value on the existing file request."
        },
        "status": {
          "type": "string",
          "description": "An optional new status of the file request.\n\nWhen the status is set to `inactive`, the file request\nwill no longer accept new submissions, and any visitor\nto the file request URL will receive a `HTTP 404` status\ncode.\n\nThis will default to the value on the existing file request.",
          "enum": ["active", "inactive"]
        },
        "is_email_required": {
          "type": "boolean",
          "description": "Whether a file request submitter is required to provide\ntheir email address.\n\nWhen this setting is set to true, the Box UI will show\nan email field on the file request form.\n\nThis will default to the value on the existing file request."
        },
        "is_description_required": {
          "type": "boolean",
          "description": "Whether a file request submitter is required to provide\na description of the files they are submitting.\n\nWhen this setting is set to true, the Box UI will show\na description field on the file request form.\n\nThis will default to the value on the existing file request."
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date after which a file request will no longer accept new\nsubmissions.\n\nAfter this date, the `status` will automatically be set to\n`inactive`.\n\nThis will default to the value on the existing file request."
        }
      }
    },
    "FileRequestCopyRequest": {
      "title": "File Request (Copy)",
      "type": "object",
      "description": "The request body to copy a file request.",
      "required": ["folder"],
      "allOf": [
        {
          "$ref": "#/definitions/FileRequestUpdateRequest"
        },
        {
          "properties": {
            "folder": {
              "type": "object",
              "description": "The folder to associate the new file request to.",
              "required": ["id"],
              "properties": {
                "type": {
                  "type": "string",
                  "description": "`folder`",
                  "enum": ["folder"]
                },
                "id": {
                  "type": "string",
                  "description": "The ID of the folder to associate the new\nfile request to."
                }
              }
            }
          }
        }
      ]
    },
    "Folder": {
      "title": "Folder",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A standard representation of a folder, as returned from any\nfolder API endpoints by default",
      "allOf": [
        {
          "$ref": "#/definitions/Folder--Mini"
        },
        {
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the folder was created. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time when the folder was last updated. This value may\nbe `null` for some folders such as the root folder or the trash\nfolder."
            },
            "description": {
              "allOf": [
                {
                  "type": "string",
                  "description": "The optional description of this folder",
                  "maxLength": 256
                },
                {}
              ]
            },
            "size": {
              "type": "integer",
              "format": "int64",
              "description": "The folder size in bytes.\n\nBe careful parsing this integer as its\nvalue can get very large."
            },
            "path_collection": {
              "allOf": [
                {
                  "title": "Path collection",
                  "description": "A list of parent folders for an item.",
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of folders in this list.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "entries": {
                      "type": "array",
                      "description": "The parent folders for this item",
                      "items": {
                        "$ref": "#/definitions/Folder--Mini"
                      }
                    }
                  }
                },
                {
                  "description": "The tree of folders that this folder is contained in,\nstarting at the root."
                },
                {}
              ]
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this folder"
                },
                {}
              ]
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this folder."
                },
                {}
              ]
            },
            "trashed_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which this folder was put in the trash."
            },
            "purged_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which this folder is expected to be purged\nfrom the trash."
            },
            "content_created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time at which this folder was originally\ncreated."
            },
            "content_modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "The date and time at which this folder was last updated."
            },
            "expires_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time and which the folder will be automatically be deleted."
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this folder."
                },
                {}
              ]
            },
            "shared_link": {
              "allOf": [
                {
                  "title": "Shared link",
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "url",
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link."
                    },
                    "download_url": {
                      "type": "string",
                      "format": "url",
                      "x-box-premium-feature": true,
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders."
                    },
                    "vanity_url": {
                      "type": "string",
                      "format": "url",
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application."
                    },
                    "vanity_name": {
                      "type": "string",
                      "description": "The custom name of a shared link, as used in the `vanity_url` field."
                    },
                    "access": {
                      "type": "string",
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_access": {
                      "type": "string",
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_permission": {
                      "type": "string",
                      "description": "The effective permissions for this shared link.",
                      "enum": ["can_download", "can_preview"]
                    },
                    "unshared_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts."
                    },
                    "is_password_enabled": {
                      "type": "boolean",
                      "description": "Defines if the shared link requires a password to access the item."
                    },
                    "permissions": {
                      "type": "object",
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`."
                        },
                        "can_preview": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder."
                        }
                      }
                    },
                    "download_count": {
                      "type": "integer",
                      "description": "The number of times this item has been downloaded."
                    },
                    "preview_count": {
                      "type": "integer",
                      "description": "The number of times this item has been previewed."
                    }
                  }
                },
                {
                  "description": "The shared link for this folder. This will be\n`null` if no shared link has been created for this\nfolder."
                }
              ]
            },
            "folder_upload_email": {
              "type": "object",
              "properties": {
                "access": {
                  "type": "string",
                  "enum": ["open", "collaborators"],
                  "description": "When this parameter has been set, users can email files\nto the email address that has been automatically\ncreated for this folder.\n\nTo create an email address, set this property either when\ncreating or updating the folder.\n\nWhen set to `collaborators`, only emails from registered email\naddresses for collaborators will be accepted. This includes\nany email aliases a user might have registered.\n\nWhen set to `open` it will accept emails from any email\naddress."
                },
                "email": {
                  "description": "The optional upload email address for this folder.",
                  "type": "string",
                  "format": "email"
                }
              }
            },
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The optional folder that this folder is located within.\n\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
                }
              ]
            },
            "item_status": {
              "type": "string",
              "description": "Defines if this item has been deleted or not.\n\n* `active` when the item has is not in the trash\n* `trashed` when the item has been moved to the trash but not deleted\n* `deleted` when the item has been permanently deleted.",
              "enum": ["active", "trashed", "deleted"]
            },
            "item_collection": {
              "allOf": [
                {
                  "$ref": "#/definitions/Items"
                },
                {
                  "description": "A page of the items that are in the folder.\n\nThis field can only be requested when querying a folder's\ninformation, not when querying a folder's items."
                },
                {}
              ]
            }
          }
        }
      ]
    },
    "Items": {
      "title": "Items",
      "type": "object",
      "description": "A list of files, folders, and web links in\ntheir mini representation.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "description": "The items in this collection.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/File--Mini"
              }
            }
          }
        }
      ]
    },
    "FolderLocks": {
      "title": "Folder Locks",
      "type": "object",
      "description": "A list of folder locks",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FolderLock"
              }
            }
          }
        }
      ]
    },
    "FolderLock": {
      "title": "Folder Lock",
      "type": "object",
      "description": "Folder locks define access restrictions placed by folder owners\nto prevent specific folders from being moved or deleted.",
      "properties": {
        "folder": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The folder that the lock applies to."
            }
          ]
        },
        "id": {
          "type": "string",
          "description": "The unique identifier for this folder lock."
        },
        "type": {
          "type": "string",
          "description": "The object type, always `folder_lock`."
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Base"
            },
            {
              "description": "The user or group that created the lock."
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the folder lock object was created."
        },
        "locked_operations": {
          "type": "object",
          "description": "The operations that have been locked. Currently the `move`\nand `delete` operations cannot be locked separately, and both need to be\nset to `true`.\n",
          "properties": {
            "move": {
              "type": "boolean",
              "description": "Whether moving the folder is restricted."
            },
            "delete": {
              "type": "boolean",
              "description": "Whether deleting the folder is restricted."
            }
          }
        },
        "lock_type": {
          "type": "string",
          "description": "The lock type, always `freeze`."
        }
      }
    },
    "MetadataTemplates": {
      "title": "Metadata templates",
      "type": "object",
      "description": "A list of metadata templates",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetadataTemplate"
              }
            }
          }
        }
      ]
    },
    "ClassificationTemplate": {
      "title": "Classification Template",
      "type": "object",
      "description": "A metadata template that holds the security classifications\ndefined by an enterprise.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the classification template."
        },
        "type": {
          "type": "string",
          "description": "`metadata_template`",
          "enum": ["metadata_template"]
        },
        "scope": {
          "type": "string",
          "description": "The scope of the classification template. This is in the format\n`enterprise_{id}` where the `id` is the enterprise ID."
        },
        "templateKey": {
          "type": "string",
          "description": "`securityClassification-6VMVochwUWo`",
          "enum": ["securityClassification-6VMVochwUWo"]
        },
        "displayName": {
          "type": "string",
          "description": "The name of this template as shown in web and mobile interfaces.",
          "enum": ["Classification"]
        },
        "hidden": {
          "type": "boolean",
          "description": "This template is always available in web and mobile interfaces."
        },
        "copyInstanceOnItemCopy": {
          "type": "boolean",
          "description": "Classifications are always copied along when the file or folder is\ncopied."
        },
        "fields": {
          "type": "array",
          "maxItems": 1,
          "minItems": 1,
          "description": "A list of fields for this classification template. This includes\nonly one field, the `Box__Security__Classification__Key`, which defines\nthe different classifications available in this enterprise.",
          "items": {
            "type": "object",
            "description": "The metadata template field that represents the available\nclassifications.",
            "properties": {
              "id": {
                "type": "string",
                "description": "The unique ID of the field."
              },
              "type": {
                "type": "string",
                "description": "`enum`",
                "enum": ["enum"]
              },
              "key": {
                "type": "string",
                "description": "`Box__Security__Classification__Key`",
                "enum": ["Box__Security__Classification__Key"]
              },
              "displayName": {
                "type": "string",
                "description": "`Classification`",
                "enum": ["Classification"]
              },
              "hidden": {
                "type": "boolean",
                "description": "Classifications are always visible to web and mobile users."
              },
              "options": {
                "type": "array",
                "description": "A list of classifications available in this enterprise.",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "description": "A single classification available in this enterprise.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique ID of this classification."
                    },
                    "key": {
                      "type": "string",
                      "description": "The display name and key for this classification."
                    },
                    "staticConfig": {
                      "type": "object",
                      "description": "Additional information about the classification.",
                      "properties": {
                        "classification": {
                          "type": "object",
                          "description": "Additional information about the classification.\n\nThis is not an exclusive list of properties, and\nmore object fields might be returned. These fields\nare used for internal Box Shield and Box Governance\npurposes and no additional value must be derived from\nthese fields.",
                          "properties": {
                            "classificationDefinition": {
                              "type": "string",
                              "description": "A longer description of the classification."
                            },
                            "colorID": {
                              "type": "number",
                              "description": "An internal Box identifier used to assign a color to\na classification label.\n\nMapping between a `colorID` and a color may change\nwithout notice. Currently, the color mappings are as\nfollows.\n\n* `0`: Yellow\n* `1`: Orange\n* `2`: Watermelon red\n* `3`: Purple rain\n* `4`: Light blue\n* `5`: Dark blue\n* `6`: Light green\n* `7`: Gray"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "MetadataTemplate": {
      "title": "Metadata template",
      "type": "object",
      "description": "A template for metadata that can be applied to files and folders",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the metadata template."
        },
        "type": {
          "type": "string",
          "description": "`metadata_template`",
          "enum": ["metadata_template"]
        },
        "scope": {
          "type": "string",
          "description": "The scope of the metadata template can either be `global` or\n`enterprise_*`. The `global` scope is used for templates that are\navailable to any Box enterprise. The `enterprise_*` scope represents\ntemplates that have been created within a specific enterprise, where `*`\nwill be the ID of that enterprise."
        },
        "templateKey": {
          "type": "string",
          "description": "A unique identifier for the template. This identifier is unique across\nthe `scope` of the enterprise to which the metadata template is being\napplied, yet is not necessarily unique across different enterprises.",
          "maxLength": 64,
          "pattern": "^[a-zA-Z_][-a-zA-Z0-9_]*$"
        },
        "displayName": {
          "type": "string",
          "description": "The display name of the template. This can be seen in the Box web app\nand mobile apps.",
          "maxLength": 4096
        },
        "hidden": {
          "type": "boolean",
          "description": "Defines if this template is visible in the Box web app UI, or if\nit is purely intended for usage through the API."
        },
        "fields": {
          "type": "array",
          "description": "An ordered list of template fields which are part of the template. Each\nfield can be a regular text field, date field, number field, as well as a\nsingle or multi-select list.",
          "items": {
            "type": "object",
            "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
            "allOf": [
              {
                "title": "Metadata Field (Write)",
                "description": "A field within a metadata template. Fields can be a basic text, date, or\nnumber field, or a list of options.",
                "required": ["type", "key", "displayName"],
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "The type of field. The basic fields are a `string` field for text, a\n`float` field for numbers, and a `date` fields to present the user with a\ndate-time picker.\n\nAdditionally, metadata templates support an `enum` field for a basic list\nof items, and ` multiSelect` field for a similar list of items where the\nuser can select more than one value.",
                    "enum": ["string", "float", "date", "enum", "multiSelect"]
                  },
                  "key": {
                    "type": "string",
                    "description": "A unique identifier for the field. The identifier must\nbe unique within the template to which it belongs.",
                    "maxLength": 256
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The display name of the field as it is shown to the user in the web and\nmobile apps.",
                    "maxLength": 4096
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the field. This is not shown to the user.",
                    "maxLength": 4096
                  },
                  "hidden": {
                    "type": "boolean",
                    "description": "Whether this field is hidden in the UI for the user and can only be set\nthrough the API instead."
                  },
                  "options": {
                    "description": "A list of options for this field. This is used in combination with the\n`enum` and `multiSelect` field types.",
                    "type": "array",
                    "items": {
                      "title": "Metadata Option (Write)",
                      "type": "object",
                      "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                      "required": ["key"],
                      "properties": {
                        "key": {
                          "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique ID of the metadata template field."
                  },
                  "options": {
                    "description": "A list of options for this field. This is used in combination\nwith the `enum` and `multiSelect` field types.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "An option for a Metadata Template Field.\n\nOptions are only present for fields of type `enum` and\n`multiSelect`. Options represent the value(s) a user can\nselect for the field either through the UI or through the API.",
                      "allOf": [
                        {
                          "title": "Metadata Option (Write)",
                          "type": "object",
                          "description": "An option for a Metadata Template Field.\n\nOptions only need to be provided for fields of type `enum` and `multiSelect`.\nOptions represent the value(s) a user can select for the field either through\nthe UI or through the API.",
                          "required": ["key"],
                          "properties": {
                            "key": {
                              "description": "The text value of the option. This represents both the display name of the\noption and the internal key used when updating templates.",
                              "type": "string"
                            }
                          }
                        },
                        {
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The internal unique identifier of the the option."
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            ]
          }
        },
        "copyInstanceOnItemCopy": {
          "type": "boolean",
          "description": "Whether or not to include the metadata when a file or folder is copied."
        }
      }
    },
    "MetadataCascadePolicies": {
      "title": "Metadata cascade policies",
      "type": "object",
      "description": "A list of metadata cascade policies.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetadataCascadePolicy"
              }
            }
          }
        }
      ]
    },
    "MetadataCascadePolicy": {
      "title": "Metadata cascade policy",
      "type": "object",
      "description": "A metadata cascade policy automatically applies a metadata template instance\nto all the files and folders within the targeted folder.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the metadata cascade policy object"
        },
        "type": {
          "type": "string",
          "description": "`metadata_cascade_policy`",
          "enum": ["metadata_cascade_policy"]
        },
        "owner_enterprise": {
          "type": "object",
          "description": "The enterprise that owns this policy.",
          "properties": {
            "type": {
              "type": "string",
              "description": "`enterprise`",
              "enum": ["enterprise"]
            },
            "id": {
              "type": "string",
              "description": "The ID of the enterprise that owns the policy."
            }
          }
        },
        "parent": {
          "type": "object",
          "description": "Represent the folder the policy is applied to.",
          "properties": {
            "type": {
              "type": "string",
              "description": "`folder`",
              "enum": ["folder"]
            },
            "id": {
              "type": "string",
              "description": "The ID of the folder the policy is applied to."
            }
          }
        },
        "scope": {
          "type": "string",
          "description": "The scope of the of the template that is cascaded down to the folder's\nchildren.",
          "enum": ["global", "enterprise_*"]
        },
        "templateKey": {
          "type": "string",
          "description": "The key of the template that is cascaded down to the folder's\nchildren.\n\nIn many cases the template key is automatically derived\nof its display name, for example `Contract Template` would\nbecome `contractTemplate`. In some cases the creator of the\ntemplate will have provided its own template key.\n\nPlease [list the templates for an enterprise][list], or\nget all instances on a [file][file] or [folder][folder]\nto inspect a template's key.\n\n[list]: e://get-metadata-templates-enterprise\n[file]: e://get-files-id-metadata\n[folder]: e://get-folders-id-metadata"
        }
      }
    },
    "MetadataQueryResults": {
      "title": "Metadata query search results",
      "type": "object",
      "description": "A page of files and folders that matched the metadata query.",
      "properties": {
        "entries": {
          "description": "The mini representation of the files and folders that match the search\nterms.\n\nBy default, this endpoint returns only the most basic info about the\nitems. To get additional fields for each item, including any of the\nmetadata, use the `fields` attribute in the query.",
          "type": "array",
          "x-box-resource-variant": 1,
          "items": {
            "$ref": "#/definitions/File"
          }
        },
        "limit": {
          "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
          "default": 100,
          "type": "integer",
          "format": "int64"
        },
        "next_marker": {
          "description": "The marker for the start of the next page of results.",
          "type": "string"
        }
      }
    },
    "MetadataQuery": {
      "title": "Metadata query search request",
      "type": "object",
      "description": "Create a search using SQL-like syntax to return items that match specific\nmetadata.",
      "required": ["from", "ancestor_folder_id"],
      "properties": {
        "from": {
          "type": "string",
          "description": "Specifies the template used in the query. Must be in the form\n`scope.templateKey`. Not all templates can be used in this field,\nmost notably the built-in, Box-provided classification templates\ncan not be used in a query."
        },
        "query": {
          "type": "string",
          "description": "The query to perform. A query is a logical expression that is very similar\nto a SQL `SELECT` statement. Values in the search query can be turned into\nparameters specified in the `query_param` arguments list to prevent having\nto manually insert search values into the query string.\n\nFor example, a value of `:amount` would represent the `amount` value in\n`query_params` object."
        },
        "query_params": {
          "type": "object",
          "description": "Set of arguments corresponding to the parameters specified in the\n`query`. The type of each parameter used in the `query_params` must match\nthe type of the corresponding metadata template field.",
          "additionalProperties": {
            "type": "string",
            "description": "The value for the argument being used in the metadata search.\n\nThe type of this parameter must match the type of the corresponding\nmetadata template field.",
            "x-box-example-key": "amount"
          }
        },
        "ancestor_folder_id": {
          "type": "string",
          "description": "The ID of the folder that you are restricting the query to. A\nvalue of zero will return results from all folders you have access\nto. A non-zero value will only return results found in the folder\ncorresponding to the ID or in any of its subfolders."
        },
        "order_by": {
          "type": "array",
          "description": "A list of template fields and directions to sort the metadata query\nresults by.\n\nThe ordering `direction` must be the same for each item in the array.",
          "items": {
            "type": "object",
            "description": "An object representing one of the metadata template fields to sort the\nmetadata query results by.",
            "properties": {
              "field_key": {
                "type": "string",
                "description": "The metadata template field to order by.\n\nThe `field_key` represents the `key` value of a field from the\nmetadata template being searched for."
              },
              "direction": {
                "type": "string",
                "description": "The direction to order by, either ascending or descending.\n\nThe `ordering` direction must be the same for each item in the\narray.",
                "enum": ["ASC", "DESC", "asc", "desc"]
              }
            }
          }
        },
        "limit": {
          "type": "integer",
          "description": "A value between 0 and 100 that indicates the maximum number of results\nto return for a single request. This only specifies a maximum\nboundary and will not guarantee the minimum number of results\nreturned.",
          "default": 100,
          "minimum": 0,
          "maximum": 100
        },
        "marker": {
          "type": "string",
          "description": "Marker to use for requesting the next page."
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "By default, this endpoint returns only the most basic info about the items for\nwhich the query matches. This attribute can be used to specify a list of\nadditional attributes to return for any item, including its metadata.\n\nThis attribute takes a list of item fields, metadata template identifiers,\nor metadata template field identifiers.\n\nFor example:\n\n* `created_by` will add the details of the user who created the item to\nthe response.\n* `metadata.<scope>.<templateKey>` will return the mini-representation\nof the metadata instance identified by the `scope` and `templateKey`.\n* `metadata.<scope>.<templateKey>.<field>` will return all the mini-representation\nof the metadata instance identified by the `scope` and `templateKey` plus\nthe field specified by the `field` name. Multiple fields for the same\n`scope` and `templateKey` can be defined."
        }
      }
    },
    "MetadataQueryIndices": {
      "title": "Metadata query indices",
      "type": "object",
      "description": "A collection of metadata query indices.",
      "properties": {
        "entries": {
          "description": "A collection of metadata query indices.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetadataQueryIndex"
          }
        },
        "limit": {
          "description": "The limit that was used for this request.",
          "default": 100,
          "type": "integer",
          "format": "int64"
        },
        "next_marker": {
          "description": "The marker for the start of the next page of results.",
          "type": "string"
        }
      }
    },
    "Comment": {
      "title": "Comment",
      "type": "object",
      "description": "Standard representation of a comment.",
      "x-box-variant": "standard",
      "allOf": [
        {
          "$ref": "#/definitions/Comment--Base"
        },
        {
          "properties": {
            "is_reply_comment": {
              "type": "boolean",
              "description": "Whether or not this comment is a reply to another\ncomment"
            },
            "message": {
              "type": "string",
              "description": "The text of the comment, as provided by the user"
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "A mini user object representing the author of the\ncomment"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time this comment was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "The time this comment was last modified"
            },
            "item": {
              "allOf": [
                {
                  "title": "Reference",
                  "description": "The bare basic reference for an object",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for this object"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type for this object"
                    }
                  }
                },
                {
                  "description": "The file this comment was placed on"
                }
              ]
            }
          }
        }
      ]
    },
    "Collaboration": {
      "title": "Collaboration",
      "type": "object",
      "description": "Collaborations define access permissions for users and groups to files and\nfolders, similar to access control lists. A collaboration object grants a\nuser or group access to a file or folder with permissions defined by a\nspecific role.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this collaboration."
        },
        "type": {
          "type": "string",
          "description": "`collaboration`",
          "enum": ["collaboration"]
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File"
            },
            {
              "description": "The file or folder to which access is granted. The field is\n`null` when the collaboration `status` is `pending`."
            }
          ]
        },
        "accessible_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user or group that is granted access"
            }
          ]
        },
        "invite_email": {
          "type": "string",
          "description": "The email address used to invite an unregistered collaborator, if\nthey are not a registered user."
        },
        "role": {
          "type": "string",
          "enum": [
            "editor",
            "viewer",
            "previewer",
            "uploader",
            "previewer uploader",
            "viewer uploader",
            "co-owner",
            "owner"
          ],
          "description": "The level of access granted."
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the collaboration will expire, or `null` if no expiration\ndate is set."
        },
        "status": {
          "type": "string",
          "enum": ["accepted", "pending", "rejected"],
          "description": "The status of the collaboration invitation."
        },
        "acknowledged_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the `status` of the collaboration object changed to\n`accepted` or `rejected`"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the collaboration object"
            },
            {}
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the collaboration object was created"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the collaboration object was last modified"
        },
        "acceptance_requirements_status": {
          "type": "object",
          "properties": {
            "terms_of_service_requirement": {
              "type": "object",
              "properties": {
                "is_accepted": {
                  "type": "boolean",
                  "description": "Whether or not the terms of service have been accepted.  The\nfield is `null` when there is no terms of service required."
                },
                "terms_of_service": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/TermsOfService--Mini"
                    },
                    {
                      "description": "The terms of service that must be accepted before the\ncollaboration can be accepted. The field is `null` when\nthere is no terms of service required."
                    }
                  ]
                }
              }
            },
            "strong_password_requirement": {
              "type": "object",
              "properties": {
                "enterprise_has_strong_password_required_for_external_users": {
                  "type": "boolean",
                  "description": "Whether or not the enterprise that owns the content requires\na strong password to collaborate on the content."
                },
                "user_has_strong_password": {
                  "type": "boolean",
                  "description": "Whether or not the user has a strong password set for their\naccount. The field is `null` when a strong password is not\nrequired."
                }
              }
            },
            "two_factor_authentication_requirement": {
              "type": "object",
              "properties": {
                "enterprise_has_two_factor_auth_enabled": {
                  "type": "boolean",
                  "description": "Whether or not the enterprise that owns the content requires\ntwo-factor authentication to be enabled in order to\ncollaborate on the content."
                },
                "user_has_two_factor_authentication_enabled": {
                  "type": "boolean",
                  "description": "Whether or not the user has two-factor authentication\nenabled. The field is `null` when two-factor\nauthentication is not required."
                }
              }
            }
          }
        }
      }
    },
    "SearchResults": {
      "title": "Search Results",
      "type": "object",
      "description": "A list of files, folders and web links that matched the search query.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the search results.\nThe total number of entries in the collection may be less than\n`total_count`.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter used.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "description": "The search results for the query provided.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/File"
              }
            }
          }
        }
      ]
    },
    "SearchResultsWithSharedLinks": {
      "title": "Search Results (including Shared Links)",
      "type": "object",
      "description": "A list of files, folders and web links that matched the search query,\nincluding the additional information about any shared links through\nwhich the item has been shared with the user.\n\nThis response format is only returned when the `include_recent_shared_links`\nquery parameter has been set to `true`.",
      "allOf": [
        {
          "type": "object",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the search results.\nThe total number of entries in the collection may be less than\n`total_count`.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for this search. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter used.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "description": "The search results for the query provided, including the\nadditional information about any shared links through\nwhich the item has been shared with the user.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchResultWithSharedLink"
              }
            }
          }
        }
      ]
    },
    "Task": {
      "title": "Task",
      "type": "object",
      "description": "A task allows for file-centric workflows within Box. Users can\ncreate tasks on files and assign them to other users for them to complete the\ntasks.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this task"
        },
        "type": {
          "type": "string",
          "description": "`task`",
          "enum": ["task"]
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file associated with the task"
            }
          ]
        },
        "due_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the task is due"
        },
        "action": {
          "type": "string",
          "description": "The type of task the task assignee will be prompted to\nperform.",
          "enum": ["review", "complete"]
        },
        "message": {
          "type": "string",
          "description": "A message that will be included with the task"
        },
        "task_assignment_collection": {
          "allOf": [
            {
              "$ref": "#/definitions/TaskAssignments"
            },
            {
              "description": "A collection of task assignment objects\nassociated with the task"
            }
          ]
        },
        "is_completed": {
          "type": "boolean",
          "description": "Whether the task has been completed"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the task"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the task object was created"
        },
        "completion_rule": {
          "type": "string",
          "description": "Defines which assignees need to complete this task before the task\nis considered completed.\n\n* `all_assignees` requires all assignees to review or\napprove the the task in order for it to be considered completed.\n* `any_assignee` accepts any one assignee to review or\napprove the the task in order for it to be considered completed.",
          "enum": ["all_assignees", "any_assignee"]
        }
      }
    },
    "TaskAssignments": {
      "title": "Task assignments",
      "type": "object",
      "description": "A list of task assignments",
      "properties": {
        "total_count": {
          "description": "The total number of items in this collection.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskAssignment"
          }
        }
      }
    },
    "TaskAssignment": {
      "title": "Task assignment",
      "type": "object",
      "description": "A task assignment defines which task is assigned to which user to complete.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this task assignment"
        },
        "type": {
          "type": "string",
          "description": "`task_assignment`",
          "enum": ["task_assignment"]
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file that the task has been assigned to."
            }
          ]
        },
        "assigned_to": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the task has been assigned to."
            }
          ]
        },
        "message": {
          "type": "string",
          "description": "A message that will is included with the task\nassignment. This is visible to the assigned user in the web and mobile\nUI."
        },
        "completed_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date at which this task assignment was\ncompleted. This will be `null` if the task is not completed yet."
        },
        "assigned_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date at which this task was assigned to the user."
        },
        "reminded_at": {
          "type": "string",
          "format": "date-time",
          "description": "The date at which the assigned user was reminded of this task\nassignment."
        },
        "resolution_state": {
          "type": "string",
          "description": "The current state of the assignment. The available states depend on\nthe `action` value of the task object.",
          "enum": ["completed", "incomplete", "approved", "rejected"]
        },
        "assigned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who assigned this task."
            }
          ]
        }
      }
    },
    "WebLink": {
      "title": "Web link",
      "type": "object",
      "x-box-variant": "standard",
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "allOf": [
        {
          "$ref": "#/definitions/WebLink--Mini"
        },
        {
          "properties": {
            "parent": {
              "allOf": [
                {
                  "$ref": "#/definitions/Folder--Mini"
                },
                {
                  "description": "The parent object the web link belongs to"
                }
              ]
            },
            "description": {
              "type": "string",
              "description": "The description accompanying the web link. This is\nvisible within the Box web application."
            },
            "path_collection": {
              "allOf": [
                {
                  "title": "Path collection",
                  "description": "A list of parent folders for an item.",
                  "type": "object",
                  "properties": {
                    "total_count": {
                      "description": "The number of folders in this list.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "entries": {
                      "type": "array",
                      "description": "The parent folders for this item",
                      "items": {
                        "$ref": "#/definitions/Folder--Mini"
                      }
                    }
                  }
                },
                {
                  "description": "The tree of folders that this web link is contained in,\nstarting at the root."
                },
                {}
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was created on Box’s servers."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was last updated on the Box\nservers."
            },
            "trashed_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was last moved to the trash."
            },
            "purged_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file will be permanently deleted."
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created this web link"
                }
              ]
            },
            "modified_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who last modified this web link"
                }
              ]
            },
            "owned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who owns this web link"
                }
              ]
            },
            "shared_link": {
              "allOf": [
                {
                  "title": "Shared link",
                  "description": "Shared links provide direct, read-only access to files or folder on Box.\n\nShared links with open access level allow anyone with the URL\nto access the item, while shared links with company or collaborators access\nlevels can only be accessed by appropriately authenticated Box users.",
                  "type": "object",
                  "properties": {
                    "url": {
                      "type": "string",
                      "format": "url",
                      "description": "The URL that can be used to access the item on Box.\n\nThis URL will display the item in Box's preview UI where the file\ncan be downloaded if allowed.\n\nThis URL will continue to work even when a custom `vanity_url`\nhas been set for this shared link."
                    },
                    "download_url": {
                      "type": "string",
                      "format": "url",
                      "x-box-premium-feature": true,
                      "description": "A URL that can be used to download the file. This URL can be used in\na browser to download the file. This URL includes the file\nextension so that the file will be saved with the right file type.\n\nThis property will be `null` for folders."
                    },
                    "vanity_url": {
                      "type": "string",
                      "format": "url",
                      "description": "The \"Custom URL\" that can also be used to preview the item on Box.  Custom\nURLs can only be created or modified in the Box Web application."
                    },
                    "vanity_name": {
                      "type": "string",
                      "description": "The custom name of a shared link, as used in the `vanity_url` field."
                    },
                    "access": {
                      "type": "string",
                      "description": "The access level for this shared link.\n\n* `open` - provides access to this item to anyone with this link\n* `company` - only provides access to this item to people the same company\n* `collaborators` - only provides access to this item to people who are\n   collaborators on this item\n\nIf this field is omitted when creating the shared link, the access level\nwill be set to the default access level specified by the enterprise admin.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_access": {
                      "type": "string",
                      "description": "The effective access level for the shared link. This can be a more\nrestrictive access level than the value in the `access` field when the\nenterprise settings restrict the allowed access levels.",
                      "enum": ["open", "company", "collaborators"]
                    },
                    "effective_permission": {
                      "type": "string",
                      "description": "The effective permissions for this shared link.",
                      "enum": ["can_download", "can_preview"]
                    },
                    "unshared_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date and time when this link will be unshared. This field can only be\nset by users with paid accounts."
                    },
                    "is_password_enabled": {
                      "type": "boolean",
                      "description": "Defines if the shared link requires a password to access the item."
                    },
                    "permissions": {
                      "type": "object",
                      "description": "Defines if this link allows a user to preview and download an item.",
                      "properties": {
                        "can_download": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be downloaded. For\nshared links on folders, this also applies to any items in the folder.\n\nThis value can be set to `true` when the effective access level is\nset to `open` or `company`, not `collaborators`."
                        },
                        "can_preview": {
                          "type": "boolean",
                          "description": "Defines if the shared link allows for the item to be previewed.\n\nThis value is always `true`. For shared links on folders this also\napplies to any items in the folder."
                        }
                      }
                    },
                    "download_count": {
                      "type": "integer",
                      "description": "The number of times this item has been downloaded."
                    },
                    "preview_count": {
                      "type": "integer",
                      "description": "The number of times this item has been previewed."
                    }
                  }
                },
                {
                  "description": "The shared link object for this item. Will be\n`null` if no shared link has been created."
                },
                {}
              ]
            },
            "item_status": {
              "type": "string",
              "enum": ["active", "trashed", "deleted"],
              "description": "Whether this item is deleted or not. Values include `active`,\n`trashed` if the file has been moved to the trash, and `deleted` if\nthe file has been permanently deleted"
            }
          }
        }
      ]
    },
    "Users": {
      "title": "Users",
      "type": "object",
      "description": "A list of users.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          }
        }
      ]
    },
    "User": {
      "title": "User",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A standard representation of a user, as returned from any\nuser API endpoints by default",
      "allOf": [
        {
          "$ref": "#/definitions/User--Mini"
        },
        {
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the user object was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the user object was last modified"
            },
            "language": {
              "type": "string",
              "description": "The language of the user, formatted in modified version of the\n[ISO 639-1](/guides/api-calls/language-codes) format."
            },
            "timezone": {
              "type": "string",
              "format": "timezone",
              "description": "The user's timezone"
            },
            "space_amount": {
              "type": "integer",
              "format": "int64",
              "description": "The user’s total available space amount in bytes"
            },
            "space_used": {
              "type": "integer",
              "format": "int64",
              "description": "The amount of space in use by the user"
            },
            "max_upload_size": {
              "type": "integer",
              "format": "int64",
              "description": "The maximum individual file size in bytes the user can have"
            },
            "status": {
              "type": "string",
              "enum": [
                "active",
                "inactive",
                "cannot_delete_edit",
                "cannot_delete_edit_upload"
              ],
              "description": "The user's account status"
            },
            "job_title": {
              "type": "string",
              "description": "The user’s job title",
              "maxLength": 100
            },
            "phone": {
              "type": "string",
              "description": "The user’s phone number",
              "maxLength": 100
            },
            "address": {
              "type": "string",
              "description": "The user’s address",
              "maxLength": 255
            },
            "avatar_url": {
              "type": "string",
              "description": "URL of the user’s avatar image"
            },
            "notification_email": {
              "type": "object",
              "description": "An alternate notification email address to which email\nnotifications are sent. When it's confirmed, this will be\nthe email address to which notifications are sent instead of\nto the primary email address.",
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address to send the notifications to."
                },
                "is_confirmed": {
                  "type": "boolean",
                  "description": "Specifies if this email address has been confirmed."
                }
              }
            }
          }
        }
      ]
    },
    "EmailAliases": {
      "title": "Email aliases",
      "type": "object",
      "description": "A list of email aliases",
      "properties": {
        "total_count": {
          "description": "The number of email aliases.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EmailAlias"
          }
        }
      }
    },
    "EmailAlias": {
      "title": "Email alias",
      "type": "object",
      "description": "An email alias for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this object"
        },
        "type": {
          "type": "string",
          "description": "`email_alias`",
          "enum": ["email_alias"]
        },
        "email": {
          "type": "string",
          "description": "The email address"
        },
        "is_confirmed": {
          "type": "boolean",
          "description": "Whether the email address has been confirmed"
        }
      }
    },
    "GroupMemberships": {
      "title": "Group memberships",
      "type": "object",
      "description": "A list of group memberships.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/GroupMembership"
              }
            }
          }
        }
      ]
    },
    "Invite": {
      "title": "Invite",
      "type": "object",
      "description": "An invite for a user to an enterprise.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this invite"
        },
        "type": {
          "type": "string",
          "description": "`invite`",
          "enum": ["invite"]
        },
        "invited_to": {
          "title": "Enterprise",
          "type": "object",
          "description": "A representation of a Box enterprise",
          "properties": {
            "id": {
              "type": "string",
              "description": "The unique identifier for this enterprise."
            },
            "type": {
              "type": "string",
              "description": "`enterprise`",
              "enum": ["enterprise"]
            },
            "name": {
              "description": "The name of the enterprise",
              "type": "string"
            }
          }
        },
        "actionable_by": {
          "$ref": "#/definitions/User--Mini"
        },
        "invited_by": {
          "$ref": "#/definitions/User--Mini"
        },
        "status": {
          "description": "The status of the invite",
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the invite was created"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the invite was modified."
        }
      }
    },
    "Groups": {
      "title": "Groups",
      "type": "object",
      "description": "A list of groups.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Group--Mini"
              }
            }
          }
        }
      ]
    },
    "Group": {
      "title": "Group",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A standard representation of a group, as returned from any\ngroup API endpoints by default",
      "allOf": [
        {
          "$ref": "#/definitions/Group--Mini"
        },
        {
          "properties": {
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the group object was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the group object was last modified"
            }
          }
        }
      ]
    },
    "GroupMembership": {
      "title": "Group membership",
      "type": "object",
      "description": "Membership is used to signify that a user is part of a\ngroup.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this group membership"
        },
        "type": {
          "type": "string",
          "description": "`group_membership`",
          "enum": ["group_membership"]
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the membership applies to"
            }
          ]
        },
        "group": {
          "allOf": [
            {
              "$ref": "#/definitions/Group--Mini"
            },
            {
              "description": "The group that the membership applies to"
            }
          ]
        },
        "role": {
          "type": "string",
          "description": "The role of the user in the group.",
          "enum": ["member", "admin"]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time this membership was created."
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time this membership was last modified."
        }
      }
    },
    "Webhooks": {
      "title": "Webhooks",
      "type": "object",
      "description": "A list of webhooks.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Webhook"
              }
            }
          }
        }
      ]
    },
    "Webhook": {
      "title": "Webhook",
      "type": "object",
      "description": "Represents a configured webhook.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this webhook."
        },
        "type": {
          "type": "string",
          "description": "`webhook`",
          "enum": ["webhook"]
        },
        "target": {
          "type": "object",
          "description": "The item that will trigger the webhook",
          "properties": {
            "id": {
              "description": "The ID of the item to trigger a webhook",
              "type": "string"
            },
            "type": {
              "description": "The type of item to trigger a webhook",
              "type": "string",
              "enum": ["file", "folder"]
            }
          }
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who created the webhook"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "A timestamp identifying the time that\nthe webhook was created."
        },
        "address": {
          "type": "string",
          "description": "The URL that is notified by this webhook"
        },
        "triggers": {
          "type": "array",
          "description": "An array of event names that this webhook is\nto be triggered for",
          "items": {
            "title": "Webhook Trigger",
            "type": "string",
            "description": "The event name that triggered this webhook",
            "enum": [
              "FILE.UPLOADED",
              "FILE.PREVIEWED",
              "FILE.DOWNLOADED",
              "FILE.TRASHED",
              "FILE.DELETED",
              "FILE.RESTORED",
              "FILE.COPIED",
              "FILE.MOVED",
              "FILE.LOCKED",
              "FILE.UNLOCKED",
              "FILE.RENAMED",
              "COMMENT.CREATED",
              "COMMENT.UPDATED",
              "COMMENT.DELETED",
              "TASK_ASSIGNMENT.CREATED",
              "TASK_ASSIGNMENT.UPDATED",
              "METADATA_INSTANCE.CREATED",
              "METADATA_INSTANCE.UPDATED",
              "METADATA_INSTANCE.DELETED",
              "FOLDER.CREATED",
              "FOLDER.RENAMED",
              "FOLDER.DOWNLOADED",
              "FOLDER.RESTORED",
              "FOLDER.DELETED",
              "FOLDER.COPIED",
              "FOLDER.MOVED",
              "FOLDER.TRASHED",
              "WEBHOOK.DELETED",
              "COLLABORATION.CREATED",
              "COLLABORATION.ACCEPTED",
              "COLLABORATION.REJECTED",
              "COLLABORATION.REMOVED",
              "COLLABORATION.UPDATED",
              "SHARED_LINK.DELETED",
              "SHARED_LINK.CREATED",
              "SHARED_LINK.UPDATED"
            ]
          }
        }
      }
    },
    "RealtimeServers": {
      "title": "Real-time servers",
      "type": "object",
      "description": "A list of real-time servers that can\nbe used for long-polling.",
      "properties": {
        "chunk_size": {
          "description": "The number of items in this response.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RealtimeServer"
          }
        }
      }
    },
    "Events": {
      "title": "Events",
      "type": "object",
      "description": "A list of event objects",
      "properties": {
        "chunk_size": {
          "description": "The number of events returned in this response.",
          "type": "integer",
          "format": "int64"
        },
        "next_stream_position": {
          "description": "The stream position of the start of the next page (chunk)\nof events.",
          "type": "string"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Event"
          }
        }
      }
    },
    "Collections": {
      "title": "Collections",
      "type": "object",
      "description": "A list of collections",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes pagination",
          "properties": {
            "total_count": {
              "description": "One greater than the offset of the last entry in the entire collection.\nThe total number of entries in the collection may be less than\n`total_count`.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "offset": {
              "description": "The 0-based offset of the first entry in this set. This will be the same\nas the `offset` query parameter.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "integer",
              "format": "int64"
            },
            "order": {
              "description": "The order by which items are returned.\n\nThis field is only returned for calls that use offset-based pagination.\nFor marker-based paginated APIs, this field will be omitted.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The order in which a pagination is ordered",
                "properties": {
                  "by": {
                    "description": "The field to order by",
                    "type": "string"
                  },
                  "direction": {
                    "type": "string",
                    "description": "The direction to order by, either ascending or descending",
                    "enum": ["ASC", "DESC"]
                  }
                }
              }
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collection"
              }
            }
          }
        }
      ]
    },
    "RecentItems": {
      "title": "Recent items",
      "type": "object",
      "description": "A list of recent items.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RecentItem"
              }
            }
          }
        }
      ]
    },
    "RetentionPolicies": {
      "title": "Retention policies",
      "type": "object",
      "description": "A list of retention policies",
      "properties": {
        "total_count": {
          "description": "The number of retention policies.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RetentionPolicy"
          }
        }
      }
    },
    "RetentionPolicy": {
      "title": "Retention policy",
      "type": "object",
      "x-box-variant": "standard",
      "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can create retention\npolicies and then later assign them to specific folders\nor their entire enterprise.  To use this feature, you must\nhave the manage retention policies scope enabled\nfor your API key via your application management console.",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy--Mini"
        },
        {
          "properties": {
            "policy_type": {
              "type": "string",
              "description": "The type of the retention policy. A retention\npolicy type can either be `finite`, where a\nspecific amount of time to retain the content is known\nupfront, or `indefinite`, where the amount of time\nto retain the content is still unknown.",
              "enum": ["finite", "indefinite"]
            },
            "status": {
              "type": "string",
              "description": "The status of the retention policy. The status of\na policy will be `active`, unless explicitly retired by an\nadministrator, in which case the status will be `retired`.\nOnce a policy has been retired, it cannot become\nactive again.",
              "enum": ["active", "retired"]
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "A mini user object representing the user that\ncreated the retention policy"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the retention policy object was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the retention policy object was last modified"
            }
          }
        }
      ]
    },
    "RetentionPolicyAssignments": {
      "title": "Retention policy assignments",
      "type": "object",
      "description": "A list of retention policy assignments",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RetentionPolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "RetentionPolicyAssignment": {
      "title": "Retention policy assignment",
      "type": "object",
      "description": "The retention policy assignment endpoint provides a way\nfor admins to apply a retention policy on a per-folder\nbasis, or place a blanket policy over the entire\nenterprise.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this retention policy assignment"
        },
        "type": {
          "type": "string",
          "description": "`retention_policy_assignment`",
          "enum": ["retention_policy_assignment"]
        },
        "retention_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionPolicy--Mini"
            },
            {
              "description": "A mini retention policy object representing the\nretention policy that has been assigned to this content"
            }
          ]
        },
        "assigned_to": {
          "allOf": [
            {
              "title": "Reference",
              "description": "The bare basic reference for an object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for this object"
                },
                "type": {
                  "type": "string",
                  "description": "The type for this object"
                }
              }
            },
            {
              "description": "The `type` and `id` of the content that is under\nretention. The `type` can either be `folder` or `\nenterprise`."
            }
          ]
        },
        "assigned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "A mini user object representing the user that\ncreated the retention policy assignment object"
            }
          ]
        },
        "assigned_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the retention policy assignment object was\ncreated"
        }
      }
    },
    "FileVersionRetentions": {
      "title": "File version retentions",
      "type": "object",
      "description": "A list of file version retentions.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileVersionRetention"
              }
            }
          }
        }
      ]
    },
    "LegalHoldPolicies": {
      "title": "Legal hold policies",
      "type": "object",
      "description": "A list of legal hold policies.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegalHoldPolicy"
              }
            }
          }
        }
      ]
    },
    "LegalHoldPolicy": {
      "title": "Legal hold policy",
      "type": "object",
      "x-box-variant": "standard",
      "description": "Legal Hold Policy information describes the basic\ncharacteristics of the Policy, such as name, description,\nand filter dates.",
      "allOf": [
        {
          "$ref": "#/definitions/LegalHoldPolicy--Mini"
        },
        {
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "Name of the legal hold policy.",
              "maxLength": 254
            },
            "description": {
              "type": "string",
              "description": "Description of the legal hold policy. Optional\nproperty with a 500 character limit.",
              "maxLength": 500
            },
            "status": {
              "type": "string",
              "enum": ["active", "applying", "releasing", "released"],
              "description": "* 'active' - the policy is not in a transition state\n* 'applying' - that the policy is in the process of\n  being applied\n* 'releasing' - that the process is in the process\n  of being released\n* 'released' - the policy is no longer active"
            },
            "assignment_counts": {
              "type": "object",
              "description": "Counts of assignments within this a legal hold policy by item type",
              "properties": {
                "user": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of users this policy is applied to"
                },
                "folder": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of folders this policy is applied to"
                },
                "file": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of files this policy is applied to"
                },
                "file_version": {
                  "type": "integer",
                  "format": "int64",
                  "description": "The number of file versions this policy is applied to"
                }
              }
            },
            "created_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created the legal hold policy object"
                }
              ]
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the legal hold policy object was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the legal hold policy object was modified.\nDoes not update when assignments are added or removed."
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the policy release request was sent. (Because\nit can take time for a policy to fully delete, this\nisn't quite the same time that the policy is fully deleted).\n\nIf `null`, the policy was not deleted."
            },
            "filter_started_at": {
              "type": "string",
              "format": "date-time",
              "description": "User-specified, optional date filter applies to\nCustodian assignments only"
            },
            "filter_ended_at": {
              "type": "string",
              "format": "date-time",
              "description": "User-specified, optional date filter applies to\nCustodian assignments only"
            },
            "release_notes": {
              "type": "string",
              "description": "Optional notes about why the policy was created.",
              "maxLength": 500
            }
          }
        }
      ]
    },
    "LegalHoldPolicyAssignments": {
      "title": "Legal hold policy assignments",
      "type": "object",
      "description": "A list of legal hold policies assignments.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LegalHoldPolicyAssignment--Base"
              }
            }
          }
        }
      ]
    },
    "LegalHoldPolicyAssignment": {
      "title": "Legal hold policy assignment",
      "type": "object",
      "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
      "allOf": [
        {
          "$ref": "#/definitions/LegalHoldPolicyAssignment--Base"
        },
        {
          "properties": {
            "legal_hold_policy": {
              "allOf": [
                {
                  "$ref": "#/definitions/LegalHoldPolicy--Mini"
                },
                {
                  "description": "The policy that the legal hold policy assignment\nis part of"
                }
              ]
            },
            "assigned_to": {
              "allOf": [
                {
                  "$ref": "#/definitions/File"
                },
                {
                  "description": "The item that the the legal hold policy\nis assigned to. Includes type and ID."
                }
              ]
            },
            "assigned_by": {
              "allOf": [
                {
                  "$ref": "#/definitions/User--Mini"
                },
                {
                  "description": "The user who created the legal hold policy\nassignment"
                }
              ]
            },
            "assigned_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the legal hold policy assignment object was\ncreated"
            },
            "deleted_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the assignment release request was sent.\n(Because it can take time for an assignment to fully\ndelete, this isn't quite the same time that the\nassignment is fully deleted). If null, Assignment\nwas not deleted."
            }
          }
        }
      ]
    },
    "FileVersionLegalHolds": {
      "title": "File version legal holds",
      "type": "object",
      "description": "A list of file version legal holds.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FileVersionLegalHold"
              }
            }
          }
        }
      ]
    },
    "FileVersionRetention": {
      "title": "File version retention",
      "type": "object",
      "description": "A retention policy blocks permanent deletion of content\nfor a specified amount of time. Admins can apply policies to\nspecified folders, or an entire enterprise. A file version retention\nis a  record for a retained file version. To use this feature,\nyou must  have the manage retention policies scope enabled for your\nAPI key via  your application management console. For more information\nabout retention policies, please visit our help documentation",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this file version retention."
        },
        "type": {
          "type": "string",
          "description": "`file_version_retention`",
          "enum": ["file_version_retention"]
        },
        "file_version": {
          "allOf": [
            {
              "$ref": "#/definitions/FileVersion--Mini"
            },
            {
              "description": "The file version this file version retention was\napplied to"
            }
          ]
        },
        "file": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file this file version retention was applied to"
            }
          ]
        },
        "applied_at": {
          "type": "string",
          "format": "date-time",
          "description": "When this file version retention object was\ncreated"
        },
        "disposition_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the retention expires on this file\nversion retention"
        },
        "winning_retention_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/RetentionPolicy--Mini"
            },
            {
              "description": "The winning retention policy applied to this file\nversion retention. A file version can have multiple\nretention policies applied."
            }
          ]
        }
      }
    },
    "FileVersionLegalHold": {
      "title": "File version legal hold",
      "type": "object",
      "description": "File-Version-Legal-Hold is an entity representing all\nholds on a File Version.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this file version legal hold"
        },
        "type": {
          "type": "string",
          "description": "`file_version_legal_hold`",
          "enum": ["file_version_legal_hold"]
        },
        "file_version": {
          "allOf": [
            {
              "$ref": "#/definitions/FileVersion--Mini"
            },
            {
              "description": "The file version that is held"
            }
          ]
        },
        "file": {
          "allOf": [
            {
              "$ref": "#/definitions/File--Mini"
            },
            {
              "description": "The file for the file version held.\nNote that there is no guarantee that the current\nversion of this file is held."
            }
          ]
        },
        "legal_hold_policy_assignments": {
          "description": "List of assignments contributing to this Hold.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LegalHoldPolicyAssignment"
          }
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time",
          "description": "Time that this File-Version-Legal-Hold was\ndeleted."
        }
      }
    },
    "DevicePinner": {
      "title": "Device pinner",
      "type": "object",
      "description": "Device pins allow enterprises to control what devices can\nuse native Box applications.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this device pin."
        },
        "type": {
          "type": "string",
          "description": "`device_pinner`",
          "enum": ["device_pinner"]
        },
        "owned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that the device pin belongs to"
            }
          ]
        },
        "product_name": {
          "type": "string",
          "description": "The type of device being pinned"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the device pin was created"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the device pin was modified"
        }
      }
    },
    "DevicePinners": {
      "title": "Device pinners",
      "type": "object",
      "description": "A list of device pins",
      "properties": {
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/DevicePinner"
          }
        },
        "limit": {
          "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed.",
          "default": 100,
          "type": "integer",
          "format": "int64"
        },
        "next_marker": {
          "description": "The marker for the start of the next page of results.",
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "description": "The order by which items are returned.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The order in which a pagination is ordered",
            "properties": {
              "by": {
                "description": "The field that is ordered by",
                "enum": ["id"],
                "type": "string"
              },
              "direction": {
                "type": "string",
                "description": "The direction to order by, either ascending or descending",
                "enum": ["asc", "desc"]
              }
            }
          }
        }
      }
    },
    "TermsOfServices": {
      "title": "Terms of services",
      "type": "object",
      "description": "A list of terms of services",
      "properties": {
        "total_count": {
          "description": "The total number of objects.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsOfService"
          }
        }
      }
    },
    "TermsOfService": {
      "title": "Terms of service",
      "type": "object",
      "x-box-variant": "standard",
      "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
      "allOf": [
        {
          "$ref": "#/definitions/TermsOfService--Mini"
        },
        {
          "properties": {
            "status": {
              "description": "Whether these terms are enabled or not",
              "type": "string",
              "enum": ["enabled", "disabled"]
            },
            "enterprise": {
              "allOf": [
                {
                  "title": "Enterprise",
                  "type": "object",
                  "description": "A representation of a Box enterprise",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier for this enterprise."
                    },
                    "type": {
                      "type": "string",
                      "description": "`enterprise`",
                      "enum": ["enterprise"]
                    },
                    "name": {
                      "description": "The name of the enterprise",
                      "type": "string"
                    }
                  }
                },
                {
                  "description": "The enterprise these terms apply to"
                }
              ]
            },
            "tos_type": {
              "description": "Whether to apply these terms to managed users or external users",
              "type": "string",
              "enum": ["managed", "external"]
            },
            "text": {
              "description": "The text for your terms and conditions. This text could be\nempty if the `status` is set to `disabled`.",
              "type": "string"
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the legal item was created"
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the legal item was modified."
            }
          }
        }
      ]
    },
    "TermsOfServiceUserStatuses": {
      "title": "Terms of service user statuses",
      "type": "object",
      "description": "A list of terms of service user statuses",
      "properties": {
        "total_count": {
          "description": "The total number of objects.",
          "type": "integer",
          "format": "int64"
        },
        "entries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TermsOfServiceUserStatus"
          }
        }
      }
    },
    "TermsOfServiceUserStatus": {
      "title": "Terms of service user status",
      "type": "object",
      "description": "The association between a Terms of Service and a user",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this terms of service user status"
        },
        "type": {
          "type": "string",
          "description": "`terms_of_service_user_status`",
          "enum": ["terms_of_service_user_status"]
        },
        "tos": {
          "allOf": [
            {
              "$ref": "#/definitions/TermsOfService--Mini"
            },
            {
              "description": "The terms of service"
            }
          ]
        },
        "user": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user"
            }
          ]
        },
        "is_accepted": {
          "type": "boolean",
          "description": "If the user has accepted the terms of services"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the legal item was created"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "When the legal item was modified."
        }
      }
    },
    "CollaborationAllowlistEntries": {
      "title": "Allowed collaboration domains",
      "type": "object",
      "description": "A list of allowed domains for collaboration.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CollaborationAllowlistEntry"
              }
            }
          }
        }
      ]
    },
    "CollaborationAllowlistEntry": {
      "title": "Allowed collaboration domain",
      "type": "object",
      "description": "An entry that describes an approved domain for which users can collaborate\nwith files and folders in your enterprise or vice versa.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this entry"
        },
        "type": {
          "type": "string",
          "description": "`collaboration_whitelist_entry`",
          "enum": ["collaboration_whitelist_entry"]
        },
        "domain": {
          "type": "string",
          "description": "The whitelisted domain"
        },
        "direction": {
          "type": "string",
          "description": "The direction of the collaborations to allow.",
          "enum": ["inbound", "outbound", "both"]
        },
        "enterprise": {
          "allOf": [
            {
              "title": "Enterprise",
              "type": "object",
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for this enterprise."
                },
                "type": {
                  "type": "string",
                  "description": "`enterprise`",
                  "enum": ["enterprise"]
                },
                "name": {
                  "description": "The name of the enterprise",
                  "type": "string"
                }
              }
            },
            {
              "description": "The enterprise this list is applied to"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the entry was created at"
        }
      }
    },
    "CollaborationAllowlistExemptTargets": {
      "title": "Allowed collaboration domains user exemptions",
      "type": "object",
      "description": "A list of users that is exempt from any of the restrictions\nimposed by the list of allowed collaboration domains for this enterprise.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CollaborationAllowlistExemptTarget"
              }
            }
          }
        }
      ]
    },
    "CollaborationAllowlistExemptTarget": {
      "title": "Allowed collaboration domains user exemption",
      "type": "object",
      "description": "The user that is exempt from any of the restrictions\nimposed by the list of allowed collaboration domains for this enterprise.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this exemption"
        },
        "type": {
          "type": "string",
          "description": "`collaboration_whitelist`",
          "enum": ["collaboration_whitelist"]
        },
        "enterprise": {
          "allOf": [
            {
              "title": "Enterprise",
              "type": "object",
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for this enterprise."
                },
                "type": {
                  "type": "string",
                  "description": "`enterprise`",
                  "enum": ["enterprise"]
                },
                "name": {
                  "description": "The name of the enterprise",
                  "type": "string"
                }
              }
            },
            {
              "description": "The enterprise this entry belongs to"
            }
          ]
        },
        "user": {
          "allOf": [
            {
              "title": "Enterprise",
              "type": "object",
              "description": "A representation of a Box enterprise",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for this enterprise."
                },
                "type": {
                  "type": "string",
                  "description": "`enterprise`",
                  "enum": ["enterprise"]
                },
                "name": {
                  "description": "The name of the enterprise",
                  "type": "string"
                }
              }
            },
            {
              "description": "The user that has been exempt"
            }
          ]
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the entry was created"
        },
        "modified_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time the entry was modified"
        }
      }
    },
    "StoragePolicies": {
      "title": "Storage policies",
      "type": "object",
      "description": "A list of storage policies.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StoragePolicy"
              }
            }
          }
        }
      ]
    },
    "StoragePolicy": {
      "title": "Storage policy",
      "type": "object",
      "x-box-variant": "standard",
      "description": "The Storage Policy object describes the storage zone.",
      "allOf": [
        {
          "$ref": "#/definitions/StoragePolicy--Mini"
        },
        {
          "properties": {
            "name": {
              "description": "A descriptive name of the region",
              "type": "string"
            }
          }
        }
      ]
    },
    "StoragePolicyAssignments": {
      "title": "Storage policy assignments",
      "type": "object",
      "description": "A list of storage policy assignments.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StoragePolicyAssignment"
              }
            }
          }
        }
      ]
    },
    "StoragePolicyAssignment": {
      "title": "Storage policy assignment",
      "type": "object",
      "description": "The assignment of a storage policy to a user or enterprise",
      "properties": {
        "storage_policy": {
          "allOf": [
            {
              "$ref": "#/definitions/StoragePolicy--Mini"
            },
            {
              "description": "The assigned storage policy"
            }
          ]
        },
        "assigned_to": {
          "allOf": [
            {
              "title": "Reference",
              "description": "The bare basic reference for an object",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The unique identifier for this object"
                },
                "type": {
                  "type": "string",
                  "description": "The type for this object"
                }
              }
            },
            {
              "description": "The enterprise or use the policy is assigned to"
            }
          ]
        }
      }
    },
    "ZipDownload": {
      "title": "Zip download",
      "type": "object",
      "x-box-reference-category": "zip_downloads",
      "description": "Represents a successful request to create a `zip` archive of a list of files\nand folders.",
      "properties": {
        "download_url": {
          "type": "string",
          "description": "The URL that can be used to download the `zip` archive. A `Get` request to\nthis URL will start streaming the items requested. By default, this URL\nis only valid for a few seconds, until the `exires_at` time, unless a\ndownload is started after which it is valid for the duration of the\ndownload.\n\nIt is important to note that the domain and path of this URL might change\nbetween API calls, and therefore it's important to use this URL as-is."
        },
        "status_url": {
          "type": "string",
          "description": "The URL that can be used to get the status of the `zip` archive being\ndownloaded. A `Get` request to this URL will return the number of files\nin the archive as well as the number of items already downloaded or\nskipped. By default, this URL is only valid for a few seconds, until the\n`exires_at` time, unless a download is started after which the URL is\nvalid for 12 hours from the start of the download.\n\nIt is important to note that the domain and path of this URL might change\nbetween API calls, and therefore it's important to use this URL as-is."
        },
        "expires_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time and date when this archive will expire. After this time the\n`status_url` and `download_url` will return an error.\n\nBy default, these URLs are only valid for a few seconds, unless a download\nis started after which the `download_url` is valid for the duration of the\ndownload, and the `status_url` is valid for 12 hours from the start of the\ndownload."
        },
        "name_conflicts": {
          "type": "array",
          "description": "A list of conflicts that occurred when trying to create the archive. This\nwould occur when multiple items have been requested with the\nsame name.\n\nTo solve these conflicts, the API will automatically rename an item\nand return a mapping between the original item's name and its new\nname.\n\nFor every conflict, both files will be renamed and therefore this list\nwill always be a multiple of 2.",
          "items": {
            "type": "array",
            "description": "An individual conflict that occurred when trying to create the archive.\nThis includes an array of 2 objects, each containing the original name\nand the renamed filename of a file or folder for which the names\nconflicted.",
            "items": {
              "type": "object",
              "description": "A file or folder for which a conflict was encountered, This object provides the type and identifier of the original item, as well as a mapping between its original name and it's new name as it will appear in the archive.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The identifier of the item"
                },
                "type": {
                  "type": "string",
                  "description": "The type of this item",
                  "enum": ["file", "folder"]
                },
                "original_name": {
                  "type": "string",
                  "description": "The original name of this item"
                },
                "download_name": {
                  "type": "string",
                  "description": "The new name of this item as it will appear in the\ndownloaded `zip` archive."
                }
              }
            }
          }
        }
      }
    },
    "ZipDownloadRequest": {
      "title": "Create a `zip` archive",
      "type": "object",
      "description": "A request to create a `zip` archive to download",
      "required": ["items"],
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of items to add to the `zip` archive. These can\nbe folders or files.",
          "items": {
            "type": "object",
            "description": "An item to add to the `zip` archive. This can be a file or a folder.",
            "required": ["type", "id"],
            "properties": {
              "type": {
                "type": "string",
                "description": "The type of the item to add to the archive.",
                "enum": ["file", "folder."]
              },
              "id": {
                "type": "string",
                "description": "The identifier of the item to add to the archive. When this item is\na folder then this can not be the root folder with ID `0`."
              }
            }
          }
        },
        "download_file_name": {
          "type": "string",
          "description": "The optional name of the `zip` archive. This name will be appended by the\n`.zip` file extension, for example `January Financials.zip`."
        }
      }
    },
    "ZipDownloadStatus": {
      "title": "Zip download status",
      "type": "object",
      "x-box-reference-category": "zip_downloads",
      "description": "The status of a `zip` archive being downloaded.",
      "properties": {
        "total_file_count": {
          "type": "integer",
          "description": "The total number of files in the archive.",
          "minimum": 0,
          "maximum": 10000
        },
        "downloaded_file_count": {
          "type": "integer",
          "description": "The number of files that have already been downloaded.",
          "minimum": 0
        },
        "skipped_file_count": {
          "type": "integer",
          "description": "The number of files that have been skipped as they could not be\ndownloaded. In many cases this is due to permission issues that have\nsurfaced between the creation of the request for the archive and the\narchive being downloaded.",
          "minimum": 0
        },
        "skipped_folder_count": {
          "type": "integer",
          "description": "The number of folders that have been skipped as they could not be\ndownloaded. In many cases this is due to permission issues that have\nsurfaced between the creation of the request for the archive and the\narchive being downloaded.",
          "minimum": 0
        },
        "state": {
          "type": "string",
          "description": "The state of the archive being downloaded.",
          "default": "in_progeress",
          "enum": ["in_progress", "failed", "success"]
        }
      }
    },
    "SignRequest": {
      "title": "Sign Request",
      "type": "object",
      "description": "A Sign Request Object",
      "allOf": [
        {
          "$ref": "#/definitions/SignRequestCreateRequest"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["sign-request"],
              "description": "object type"
            },
            "signers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SignRequestSigner"
              },
              "description": "Array of signers for the sign request"
            },
            "id": {
              "type": "string",
              "description": "Sign request ID"
            },
            "prepare_url": {
              "type": "string",
              "description": "This URL is returned if `is_document_preparation_needed` is\nset to `true` in the request. It is used to prepare the sign request\nvia UI. The sign request is not sent until preparation is complete."
            },
            "signing_log": {
              "allOf": [
                {
                  "$ref": "#/definitions/File--Mini"
                },
                {
                  "description": "Reference to a file that holds a log of all signer activity for\nthe request"
                }
              ]
            },
            "status": {
              "type": "string",
              "enum": [
                "converting",
                "created",
                "sent",
                "viewed",
                "signed",
                "cancelled",
                "declined",
                "error_converting",
                "error_sending",
                "expired"
              ],
              "description": "Describes the status of the sign request"
            },
            "sign_files": {
              "type": "object",
              "properties": {
                "files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/File--Mini"
                  }
                },
                "is_ready_for_download": {
                  "type": "boolean",
                  "description": "Indicates whether the `sign_files` documents are processing\nand the PDFs may be out of date. A change to any document\nrequires processing on all `sign_files`. We\nrecommended waiting until processing is finished\n(and this value is true) before downloading the PDFs."
                }
              },
              "description": "List of files that will be signed, which are copies of the original\nsource files. A new version of these files are created as signers sign\nand can be downloaded at any point in the signing process."
            },
            "auto_expire_at": {
              "type": "string",
              "format": "date-time",
              "description": "Uses `days_valid` to calculate the date and time, in GMT, the sign request will expire if unsigned."
            }
          }
        }
      ]
    },
    "SignRequests": {
      "title": "Box Sign",
      "type": "object",
      "description": "A standard representation of a sign request, as returned from any Box Sign\nAPI endpoints by default.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SignRequest"
              }
            }
          }
        }
      ]
    },
    "SignRequestCreateRequest": {
      "title": "Create a sign request",
      "type": "object",
      "description": "A request to create a sign request object",
      "required": ["signers", "source_files", "parent_folder"],
      "properties": {
        "is_document_preparation_needed": {
          "type": "boolean",
          "description": "Indicates if the sender should receive a `prepare_url` in the response to complete document preparation via UI."
        },
        "are_text_signatures_enabled": {
          "type": "boolean",
          "description": "Disables the usage of signatures generated by typing (text)",
          "default": true
        },
        "email_subject": {
          "type": "string",
          "description": "Subject of sign request email. This is cleaned by sign request. If this field is not passed, a default subject will be used."
        },
        "email_message": {
          "type": "string",
          "description": "Message to include in sign request email. The field is cleaned through sanitization of specific characters. However, some html tags are allowed. Links included in the message are also converted to hyperlinks in the email. The message may contain the following html tags including `a`, `abbr`, `acronym`, `b`, `blockquote`, `code`, `em`, `i`, `ul`, `li`, `ol`, and `strong`. Be aware that when the text to html ratio is too high, the email may end up in spam filters. Custom styles on these tags are not allowed. If this field is not passed, a default message will be used."
        },
        "are_reminders_enabled": {
          "type": "boolean",
          "description": "Reminds signers to sign a document on day 3, 8, 13 and 18. Reminders are only sent to outstanding signers."
        },
        "signers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignRequestCreateSigner"
          },
          "description": "Array of signers for the sign request. 35 is the max number of signers permitted."
        },
        "source_files": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/File--Mini"
          },
          "description": "List of files to create a signing document from. This is currently limited to one file. Only the ID and type fields are required for each file."
        },
        "parent_folder": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The destination folder to place final, signed document and signing\nlog. Only `ID` and `type` fields are required. The root folder,\nfolder ID `0`, cannot be used."
            }
          ]
        },
        "prefill_tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SignRequestPrefillTag"
          },
          "description": "When a document contains sign related tags in the content, you can prefill them using this `prefill_tags` by referencing the 'id' of the tag as the `external_id` field of the prefill tag."
        },
        "days_valid": {
          "type": "integer",
          "description": "Number of days after which this request will automatically expire if not completed",
          "minimum": 1,
          "maximum": 730
        },
        "external_id": {
          "type": "string",
          "description": "This can be used to reference an ID in an external system that the sign request is related to."
        }
      }
    },
    "Workflows": {
      "title": "Workflows",
      "type": "object",
      "description": "A list of workflows.\n\nYou application must be authorized to use the `Manage Box Relay` application\nscope within the developer console in order to use this resource.",
      "allOf": [
        {
          "type": "object",
          "description": "The part of an API response that describes marker\nbased pagination",
          "properties": {
            "limit": {
              "description": "The limit that was used for these entries. This will be the same as the\n`limit` query parameter unless that value exceeded the maximum value\nallowed. The maximum value varies by API.",
              "type": "integer",
              "format": "int64"
            },
            "next_marker": {
              "description": "The marker for the start of the next page of results.",
              "type": "integer",
              "format": "int64"
            },
            "prev_marker": {
              "description": "The marker for the start of the previous page of results.",
              "type": "integer",
              "format": "int64"
            }
          }
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Workflow"
              }
            }
          }
        }
      ]
    },
    "File--Mini": {
      "title": "File (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file, used when\nnested under another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/File--Base"
        },
        {
          "properties": {
            "sequence_id": {
              "allOf": [
                {
                  "type": "string",
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource."
                },
                {}
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the file"
            },
            "sha1": {
              "type": "string",
              "format": "digest",
              "description": "The SHA1 hash of the file. This can be used to compare the contents\nof a file on Box with a local file."
            },
            "file_version": {
              "allOf": [
                {
                  "$ref": "#/definitions/FileVersion--Mini"
                },
                {
                  "description": "The information about the current version of the file."
                }
              ]
            }
          }
        }
      ]
    },
    "Folder--Mini": {
      "title": "Folder (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file version, used when\nnested under another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Folder--Base"
        },
        {
          "properties": {
            "sequence_id": {
              "allOf": [
                {
                  "type": "string",
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource."
                },
                {}
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the folder."
            }
          }
        }
      ]
    },
    "User--Mini": {
      "title": "User (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a user, as can be returned when nested within other\nresources.",
      "allOf": [
        {
          "$ref": "#/definitions/User--Base"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The display name of this user",
              "maxLength": 50
            },
            "login": {
              "type": "string",
              "format": "email",
              "description": "The primary email address of this user"
            }
          }
        }
      ]
    },
    "FileConflict": {
      "title": "File (Conflict)",
      "type": "object",
      "description": "A representation of a file that is used to show",
      "allOf": [
        {
          "$ref": "#/definitions/File--Mini"
        },
        {
          "properties": {
            "sha1": {
              "type": "string",
              "description": "The SHA1 hash of the file."
            },
            "file_version": {
              "$ref": "#/definitions/FileVersion--Mini"
            }
          }
        }
      ]
    },
    "FileVersion--Mini": {
      "title": "File version (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a file version, used when\nnested within another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/FileVersion--Base"
        },
        {
          "properties": {
            "sha1": {
              "type": "string",
              "description": "The SHA1 hash of this version of the file."
            }
          }
        }
      ]
    },
    "Metadata--Base": {
      "title": "Metadata instance (Base)",
      "type": "object",
      "x-box-variants": ["base", "standard", "full"],
      "x-box-variant": "base",
      "description": "The base representation of a metadata instance.",
      "properties": {
        "$parent": {
          "type": "string",
          "description": "The identifier of the item that this metadata instance\nhas been attached to. This combines the `type` and the `id`\nof the parent in the form `{type}_{id}`."
        },
        "$template": {
          "type": "string",
          "description": "The name of the template"
        },
        "$scope": {
          "type": "string",
          "description": "An ID for the scope in which this template\nhas been applied. This will be `enterprise_{enterprise_id}` for templates\ndefined for use in this enterprise, and `global` for general templates\nthat are available to all enterprises using Box."
        },
        "$version": {
          "type": "integer",
          "description": "The version of the metadata instance. This version starts at 0 and\nincreases every time a user-defined property is modified."
        }
      }
    },
    "WebLink--Mini": {
      "title": "Web link (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "allOf": [
        {
          "$ref": "#/definitions/WebLink--Base"
        },
        {
          "properties": {
            "url": {
              "type": "string",
              "description": "The URL this web link points to"
            },
            "sequence_id": {
              "allOf": [
                {
                  "type": "string",
                  "description": "A numeric identifier that represents the most recent user event\nthat has been applied to this item.\n\nThis can be used in combination with the `GET /events`-endpoint\nto filter out user events that would have occurred before this\nidentifier was read.\n\nAn example would be where a Box Drive-like application\nwould fetch an item via the API, and then listen to incoming\nuser events for changes to the item. The application would\nignore any user events where the `sequence_id` in the event\nis smaller than or equal to the `sequence_id` in the originally\nfetched resource."
                },
                {}
              ]
            },
            "name": {
              "type": "string",
              "description": "The name of the web link"
            }
          }
        }
      ]
    },
    "User--Base": {
      "title": "User (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard", "full"],
      "x-box-variant": "base",
      "description": "A mini representation of a user, used when\nnested within another resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this user"
        },
        "type": {
          "type": "string",
          "description": "`user`",
          "enum": ["user"]
        }
      }
    },
    "MetadataQueryIndex": {
      "title": "Metadata query index",
      "type": "object",
      "description": "A metadata query index",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the metadata query index."
        },
        "type": {
          "type": "string",
          "description": "Value is always `metadata_query_index`"
        },
        "status": {
          "type": "string",
          "description": "The status of the metadata query index",
          "enum": ["building", "active", "disabled"]
        },
        "fields": {
          "type": "array",
          "description": "A list of template fields which make up the index.",
          "items": {
            "type": "object",
            "description": "The field which makes up the index.",
            "allOf": [
              {
                "properties": {
                  "key": {
                    "type": "string",
                    "description": "The metadata template field key."
                  },
                  "sort_direction": {
                    "type": "string",
                    "description": "The sort direction of the field.",
                    "enum": ["asc", "desc"]
                  }
                }
              }
            ]
          }
        }
      }
    },
    "Comment--Base": {
      "title": "Comment (Base)",
      "type": "object",
      "x-box-variants": ["base", "standard", "full"],
      "x-box-variant": "base",
      "description": "Base representation of a comment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this comment."
        },
        "type": {
          "type": "string",
          "description": "`comment`",
          "enum": ["comment"]
        }
      }
    },
    "TermsOfService--Mini": {
      "title": "Terms of service (Mini)",
      "type": "object",
      "x-box-variants": ["mini", "standard"],
      "x-box-variant": "mini",
      "description": "The root-level record that is supposed to represent a\nsingle Terms of Service.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this terms of service."
        },
        "type": {
          "type": "string",
          "description": "`terms_of_service`",
          "enum": ["terms_of_service"]
        }
      }
    },
    "SearchResultWithSharedLink": {
      "title": "Search Result (including Shared Link)",
      "type": "object",
      "description": "A single of files, folder or web link that matched the search query,\nincluding the additional information about the shared link through\nwhich the item has been shared with the user.\n\nThis response format is only returned when the\n`include_recent_shared_links` query parameter has been set to `true`.",
      "properties": {
        "accessible_via_shared_link": {
          "description": "The optional shared link through which the user has access to this\nitem. This value is only returned for items for which the user has\nrecently accessed the file through a shared link. For all other\nitems this value will return `null`."
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File"
            },
            {
              "description": "The file, folder or web link that matched the\nsearch query."
            }
          ]
        },
        "type": {
          "description": "The result type. The value is always `search_result`."
        }
      }
    },
    "Group--Mini": {
      "title": "Group (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "Mini representation of a group, including id and name of\ngroup.",
      "allOf": [
        {
          "$ref": "#/definitions/Group--Base"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of the group"
            },
            "group_type": {
              "type": "string",
              "description": "The type of the group.",
              "enum": ["managed_group", "all_users_group"]
            }
          }
        }
      ]
    },
    "RealtimeServer": {
      "title": "Real-time server",
      "type": "object",
      "description": "A real-time server that can be used for\nlong polling user events",
      "properties": {
        "type": {
          "description": "`realtime_server`",
          "type": "string"
        },
        "url": {
          "type": "string",
          "description": "The URL for the server."
        },
        "ttl": {
          "description": "The time in minutes for which this server is available",
          "type": "integer"
        },
        "max_retries": {
          "description": "The maximum number of retries this server will\nallow before a new long poll should be started by\ngetting a [new list of server](#options-events).",
          "type": "integer"
        },
        "retry_timeout": {
          "description": "The maximum number of seconds without a response\nafter which you should retry the long poll connection.\n\nThis helps to overcome network issues where the long\npoll looks to be working but no packages are coming\nthrough.",
          "type": "integer"
        }
      }
    },
    "Event": {
      "title": "Event",
      "type": "object",
      "description": "The description of an event that happened within Box",
      "properties": {
        "type": {
          "description": "`event`",
          "type": "string"
        },
        "event_id": {
          "type": "string",
          "description": "The ID of the event object. You can use this to detect duplicate events"
        },
        "created_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user that performed the action represented by the event.\nSome events may be performed by users not logged into Box.\nIn that case, not all attributes of the object are populated and the\nevent is attributed to a unknown user (`user_id = 2`)"
            }
          ]
        },
        "event_type": {
          "allOf": [
            {
              "title": "Event Type",
              "type": "string",
              "description": "An event type that can trigger an event",
              "enum": [
                "ACCESS_GRANTED",
                "ACCESS_REVOKED",
                "ADD_DEVICE_ASSOCIATION",
                "ADD_LOGIN_ACTIVITY_DEVICE",
                "ADMIN_LOGIN",
                "APPLICATION_CREATED",
                "APPLICATION_PUBLIC_KEY_ADDED",
                "APPLICATION_PUBLIC_KEY_DELETED",
                "CHANGE_ADMIN_ROLE",
                "CHANGE_FOLDER_PERMISSION",
                "COLLABORATION_ACCEPT",
                "COLLABORATION_EXPIRATION",
                "COLLABORATION_INVITE",
                "COLLABORATION_REMOVE",
                "COLLABORATION_ROLE_CHANGE",
                "COLLAB_ADD_COLLABORATOR",
                "COLLAB_INVITE_COLLABORATOR",
                "COLLAB_REMOVE_COLLABORATOR",
                "COLLAB_ROLE_CHANGE",
                "COMMENT_CREATE",
                "COMMENT_DELETE",
                "CONTENT_ACCESS",
                "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY",
                "CONTENT_WORKFLOW_AUTOMATION_ADD",
                "CONTENT_WORKFLOW_AUTOMATION_DELETE",
                "CONTENT_WORKFLOW_POLICY_ADD",
                "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION",
                "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION",
                "COPY",
                "DATA_RETENTION_CREATE_RETENTION",
                "DATA_RETENTION_REMOVE_RETENTION",
                "DELETE",
                "DELETE_USER",
                "DEVICE_TRUST_CHECK_FAILED",
                "DOWNLOAD",
                "EDIT",
                "EDIT_USER",
                "EMAIL_ALIAS_CONFIRM",
                "EMAIL_ALIAS_REMOVE",
                "ENABLE_TWO_FACTOR_AUTH",
                "ENTERPRISE_APP_AUTHORIZATION_UPDATE",
                "FAILED_LOGIN",
                "FILE_MARKED_MALICIOUS",
                "FILE_WATERMARKED_DOWNLOAD",
                "GROUP_ADD_ITEM",
                "GROUP_ADD_USER",
                "GROUP_CREATION",
                "GROUP_DELETION",
                "GROUP_EDITED",
                "GROUP_REMOVE_ITEM",
                "GROUP_REMOVE_USER",
                "ITEM_COPY",
                "ITEM_CREATE",
                "ITEM_DOWNLOAD",
                "ITEM_MAKE_CURRENT_VERSION",
                "ITEM_MODIFY",
                "ITEM_MOVE",
                "ITEM_OPEN",
                "ITEM_PREVIEW",
                "ITEM_RENAME",
                "ITEM_SHARED",
                "ITEM_SHARED_CREATE",
                "ITEM_SHARED_UNSHARE",
                "ITEM_SHARED_UPDATE",
                "ITEM_SYNC",
                "ITEM_TRASH",
                "ITEM_UNDELETE_VIA_TRASH",
                "ITEM_UNSYNC",
                "ITEM_UPLOAD",
                "LEGAL_HOLD_ASSIGNMENT_CREATE",
                "LEGAL_HOLD_ASSIGNMENT_DELETE",
                "LEGAL_HOLD_POLICY_CREATE",
                "LEGAL_HOLD_POLICY_DELETE",
                "LEGAL_HOLD_POLICY_UPDATE",
                "LOCK",
                "LOCK_CREATE",
                "LOCK_DESTROY",
                "LOGIN",
                "MASTER_INVITE_ACCEPT",
                "MASTER_INVITE_REJECT",
                "METADATA_INSTANCE_CREATE",
                "METADATA_INSTANCE_DELETE",
                "METADATA_INSTANCE_UPDATE",
                "METADATA_TEMPLATE_CREATE",
                "METADATA_TEMPLATE_DELETE",
                "METADATA_TEMPLATE_UPDATE",
                "MOVE",
                "NEW_USER",
                "PREVIEW",
                "REMOVE_DEVICE_ASSOCIATION",
                "REMOVE_LOGIN_ACTIVITY_DEVICE",
                "RENAME",
                "RETENTION_POLICY_ASSIGNMENT_ADD",
                "SHARE",
                "SHARE_EXPIRATION",
                "SHIELD_ALERT",
                "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED",
                "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION",
                "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED",
                "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION",
                "SHIELD_JUSTIFICATION_APPROVAL",
                "STORAGE_EXPIRATION",
                "TAG_ITEM_CREATE",
                "TASK_ASSIGNMENT_CREATE",
                "TASK_ASSIGNMENT_DELETE",
                "TASK_ASSIGNMENT_UPDATE",
                "TASK_CREATE",
                "TASK_UPDATE",
                "TERMS_OF_SERVICE_ACCEPT",
                "TERMS_OF_SERVICE_REJECT",
                "UNDELETE",
                "UNLOCK",
                "UNSHARE",
                "UPDATE_COLLABORATION_EXPIRATION",
                "UPDATE_SHARE_EXPIRATION",
                "UPLOAD",
                "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE",
                "WATERMARK_LABEL_CREATE",
                "WATERMARK_LABEL_DELETE"
              ]
            },
            {
              "description": "The event type that triggered this event"
            }
          ]
        },
        "session_id": {
          "type": "string",
          "description": "The session of the user that performed the action. Not all events will\npopulate this attribute."
        },
        "source": {
          "allOf": [
            {
              "$ref": "#/definitions/User"
            },
            {
              "description": "The item that triggered this event"
            }
          ]
        },
        "additional_details": {
          "type": "object",
          "description": "This object provides additional information about the event if available.\n\nThis can include how a user performed an event as well as additional\ninformation to correlate an event to external KeySafe logs. Not all events\nhave an `additional_details` object.  This object is only available in the\nEnterprise Events."
        }
      }
    },
    "Collection": {
      "title": "Collection",
      "type": "object",
      "description": "A collection of items, including files and folders.\n\nCurrently, the only collection available\nis the `favorites` collection.\n\nThe contents of a collection can be explored in a\nsimilar way to which the contents of a folder is\nexplored.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this collection."
        },
        "type": {
          "type": "string",
          "description": "`collection`",
          "enum": ["collection"]
        },
        "name": {
          "type": "string",
          "description": "The name of the collection.",
          "enum": ["Favorites"]
        },
        "collection_type": {
          "type": "string",
          "description": "The type of the collection. This is used to\ndetermine the proper visual treatment for\ncollections.",
          "enum": ["favorites"]
        }
      }
    },
    "RecentItem": {
      "title": "Recent item",
      "type": "object",
      "description": "A recent item accessed by a user.",
      "properties": {
        "type": {
          "type": "string",
          "description": "`recent_item`"
        },
        "item": {
          "allOf": [
            {
              "$ref": "#/definitions/File"
            },
            {
              "description": "The item that was recently accessed."
            }
          ]
        },
        "interaction_type": {
          "type": "string",
          "description": "The most recent type of access the user performed on\nthe item.",
          "enum": [
            "item_preview",
            "item_upload",
            "item_comment",
            "item_open",
            "item_modify"
          ]
        },
        "interacted_at": {
          "type": "string",
          "format": "date-time",
          "description": "The time of the most recent interaction."
        },
        "interaction_shared_link": {
          "type": "string",
          "description": "If the item was accessed through a shared link it will appear here,\notherwise this will be null."
        }
      }
    },
    "RetentionPolicy--Mini": {
      "title": "Retention policy (Mini)",
      "type": "object",
      "x-box-variant": "mini",
      "description": "A mini representation of a retention policy, used when\nnested within another resource.",
      "allOf": [
        {
          "$ref": "#/definitions/RetentionPolicy--Base"
        },
        {
          "properties": {
            "policy_name": {
              "type": "string",
              "description": "The name given to the retention policy"
            },
            "retention_length": {
              "type": "string",
              "format": "int32",
              "minimum": 1,
              "description": "The length of the retention policy. This length\nspecifies the duration in days that the retention\npolicy will be active for after being assigned to\ncontent.  If the policy has A `policy_type` of\n`indefinite`, the `retention_length` will also be\n`indefinite`."
            },
            "disposition_action": {
              "type": "string",
              "description": "The disposition action of the retention policy.\nThis action can be `permanently_delete`, which\nwill cause the content retained by the policy\nto be permanently deleted, or `remove_retention`,\nwhich will lift the retention policy from the content,\nallowing it to be deleted by users,\nonce the retention policy has expired.",
              "enum": ["permanently_delete", "remove_retention"]
            }
          }
        }
      ]
    },
    "LegalHoldPolicy--Mini": {
      "title": "Legal hold policy (Mini)",
      "type": "object",
      "x-box-variants": ["mini", "standard"],
      "x-box-variant": "mini",
      "description": "A mini legal hold policy",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this legal hold policy"
        },
        "type": {
          "type": "string",
          "description": "`legal_hold_policy`",
          "enum": ["legal_hold_policy"]
        }
      }
    },
    "LegalHoldPolicyAssignment--Base": {
      "title": "Legal hold policy assignment (Base)",
      "type": "object",
      "x-box-variants": ["base", "standard"],
      "x-box-variant": "base",
      "description": "Legal Hold Assignments are used to assign Legal Hold\nPolicies to Users, Folders, Files, or File Versions.\n\nCreating a Legal Hold Assignment puts a hold\non the File-Versions that belong to the Assignment's\n'apply-to' entity.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this legal hold assignment"
        },
        "type": {
          "type": "string",
          "description": "`legal_hold_policy_assignment`",
          "enum": ["legal_hold_policy_assignment"]
        }
      }
    },
    "StoragePolicy--Mini": {
      "title": "Storage policy (Mini)",
      "type": "object",
      "x-box-variants": ["standard", "mini"],
      "x-box-variant": "mini",
      "description": "A mini description of a Storage Policy object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this storage policy"
        },
        "type": {
          "type": "string",
          "description": "`storage_policy`",
          "enum": ["storage_policy"]
        }
      }
    },
    "SignRequestSigner": {
      "title": "Signer fields for GET Sign Request response",
      "type": "object",
      "description": "The schema for a Signer in a GET Sign Request request body",
      "required": ["email"],
      "allOf": [
        {
          "$ref": "#/definitions/SignRequestCreateSigner"
        },
        {
          "properties": {
            "has_viewed_document": {
              "type": "boolean",
              "readOnly": true,
              "description": "Set to `true` if the signer views the document"
            },
            "signer_decision": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "enum": ["signed", "declined"],
                  "description": "Type of decision made by the signer"
                },
                "finalized_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and Time that the decision was made"
                }
              },
              "description": "Final decision made by the signer"
            },
            "inputs": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SignRequestSignerInput"
              },
              "readOnly": true
            },
            "embed_url": {
              "type": "string",
              "readOnly": true,
              "description": "URL to direct a signer to for signing"
            }
          }
        }
      ]
    },
    "SignRequestCreateSigner": {
      "title": "Signer fields for Create Sign Request",
      "type": "object",
      "description": "The schema for a Signer in a POST Sign Request request body",
      "required": ["email"],
      "properties": {
        "email": {
          "type": "string",
          "description": "Email address of the signer"
        },
        "role": {
          "type": "string",
          "enum": ["signer", "approver", "final_copy_reader"],
          "description": "Defines the role of the signer in the sign request. A `signer`\nmust sign the document and an `approver` must approve the document. A\n`final_copy_reader` only receives the final signed document and signing\nlog.",
          "default": "signer"
        },
        "is_in_person": {
          "type": "boolean",
          "description": "Used in combination with an embed URL for a sender. After the\nsender signs, they will be redirected to the next `in_person` signer."
        },
        "order": {
          "type": "integer",
          "description": "Order of the signer",
          "minimum": 0
        },
        "embed_url_external_user_id": {
          "type": "string",
          "description": "User ID for the signer in an external application responsible\nfor authentication when accessing the embed URL."
        }
      }
    },
    "SignRequestPrefillTag": {
      "title": "Sign Request Prefill Tag",
      "type": "object",
      "description": "Prefill tags are used to prefill placeholders with signer input data. Only\none value field can be included.",
      "properties": {
        "document_tag_id": {
          "type": "string",
          "description": "This references the ID of a specific tag contained in a file of the sign request."
        },
        "text_value": {
          "type": "string",
          "description": "Text prefill value"
        },
        "checkbox_value": {
          "type": "boolean",
          "description": "Checkbox prefill value"
        },
        "date_value": {
          "type": "string",
          "format": "date-time",
          "description": "Date prefill value"
        }
      }
    },
    "Workflow": {
      "title": "Workflow",
      "type": "object",
      "x-box-variant": "standard",
      "description": "Box Relay Workflows are objects that represent a named collection of flows.\n\nYou application must be authorized to use the `Manage Box Relay` application\nscope within the developer console in order to use this resource.",
      "allOf": [
        {
          "$ref": "#/definitions/Workflow--Mini"
        },
        {
          "properties": {
            "flows": {
              "type": "array",
              "description": "A list of flows assigned to a workflow.",
              "items": {
                "type": "object",
                "description": "A step in a Box Relay Workflow. Each flow contains a `Trigger` and\na collection of Outcomes to perform once the conditions of a\n`Trigger` are met",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The identifier of the flow"
                  },
                  "type": {
                    "type": "string",
                    "description": "The flow's resource type",
                    "enum": ["flow"]
                  },
                  "trigger": {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "The trigger's resource type",
                            "enum": ["trigger"]
                          },
                          "trigger_type": {
                            "type": "string",
                            "description": "The type of trigger selected for this flow",
                            "enum": ["WORKFLOW_MANUAL_START"]
                          },
                          "scope": {
                            "type": "array",
                            "description": "List of trigger scopes",
                            "items": {
                              "type": "object",
                              "description": "Object that describes where and how a Trigger condition is met",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The trigger scope's resource type",
                                  "enum": ["trigger_scope"]
                                },
                                "ref": {
                                  "type": "string",
                                  "description": "Indicates the path of the condition value to check"
                                },
                                "object": {
                                  "type": "object",
                                  "description": "The object the `ref` points to",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "The type of the object",
                                      "enum": ["folder"]
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The id of the object"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "Trigger that initiates flow"
                      }
                    ]
                  },
                  "outcomes": {
                    "allOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "List of outcomes to perform once the conditions of trigger are met.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The identifier of the outcome"
                            },
                            "type": {
                              "type": "string",
                              "description": "The outcomes resource type",
                              "enum": ["outcome"]
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the outcome"
                            },
                            "action_type": {
                              "allOf": [
                                {
                                  "title": "Action Type",
                                  "type": "string",
                                  "description": "The type of outcome",
                                  "enum": [
                                    "add_metadata",
                                    "assign_task",
                                    "copy_file",
                                    "copy_folder",
                                    "create_folder",
                                    "delete_file",
                                    "delete_folder",
                                    "lock_file",
                                    "move_file",
                                    "move_folder",
                                    "remove_watermark_file",
                                    "rename_folder",
                                    "restore_folder",
                                    "share_file",
                                    "share_folder",
                                    "unlock_file",
                                    "upload_file",
                                    "wait_for_task",
                                    "watermark_file",
                                    "go_back_to_step",
                                    "apply_file_classification",
                                    "apply_folder_classification",
                                    "send_notification"
                                  ]
                                },
                                {
                                  "description": "The type of outcome"
                                }
                              ]
                            },
                            "outcome_parameters": {
                              "type": "object",
                              "description": "Information about how to complete the outcome which varies based on\n`action_type` selected"
                            },
                            "if_rejected": {
                              "type": "array",
                              "description": "If `action_type` is `assign_task` and the task is rejected, returns a\nlist of outcomes to complete",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The identifier of the outcome"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The outcomes resource type",
                                    "enum": ["outcome"]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the outcome"
                                  },
                                  "action_type": {
                                    "allOf": [
                                      {
                                        "title": "Action Type",
                                        "type": "string",
                                        "description": "The type of outcome",
                                        "enum": [
                                          "add_metadata",
                                          "assign_task",
                                          "copy_file",
                                          "copy_folder",
                                          "create_folder",
                                          "delete_file",
                                          "delete_folder",
                                          "lock_file",
                                          "move_file",
                                          "move_folder",
                                          "remove_watermark_file",
                                          "rename_folder",
                                          "restore_folder",
                                          "share_file",
                                          "share_folder",
                                          "unlock_file",
                                          "upload_file",
                                          "wait_for_task",
                                          "watermark_file",
                                          "go_back_to_step",
                                          "apply_file_classification",
                                          "apply_folder_classification",
                                          "send_notification"
                                        ]
                                      },
                                      {
                                        "description": "The type of outcome"
                                      }
                                    ]
                                  },
                                  "outcome_parameters": {
                                    "type": "object",
                                    "description": "Information about how to complete the outcome which varies based on\n`action_type` selected"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "Actions that are completed once the flow is triggered"
                      }
                    ]
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "When this flow was created"
                  },
                  "created_by": {
                    "allOf": [
                      {
                        "$ref": "#/definitions/User--Base"
                      },
                      {
                        "description": "The user who created this flow"
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      ]
    },
    "File--Base": {
      "title": "File (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard", "full"],
      "x-box-variant": "base",
      "description": "The bare basic representation of a file, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file.\n\nThe ID for any file can be determined\nby visiting a file in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/files/123`\nthe `file_id` is `123`."
        },
        "etag": {
          "type": "string",
          "description": "The HTTP `etag` of this file. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the file if (no) changes have happened."
        },
        "type": {
          "type": "string",
          "description": "`file`",
          "enum": ["file"]
        }
      }
    },
    "Folder--Base": {
      "title": "Folder (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard", "full"],
      "x-box-variant": "base",
      "description": "The bare basic representation of a folder, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a folder.\n\nThe ID for any folder can be determined\nby visiting a folder in the web application\nand copying the ID from the URL. For example,\nfor the URL `https://*.app.box.com/folders/123`\nthe `folder_id` is `123`."
        },
        "etag": {
          "type": "string",
          "description": "The HTTP `etag` of this folder. This can be used within some API\nendpoints in the `If-Match` and `If-None-Match` headers to only\nperform changes on the folder if (no) changes have happened."
        },
        "type": {
          "type": "string",
          "description": "`folder`",
          "enum": ["folder"]
        }
      }
    },
    "FileVersion--Base": {
      "title": "File version (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard"],
      "x-box-variant": "base",
      "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file version."
        },
        "type": {
          "type": "string",
          "description": "`file_version`",
          "enum": ["file_version"]
        }
      }
    },
    "WebLink--Base": {
      "title": "Web link (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard"],
      "x-box-variant": "base",
      "description": "Web links are objects that point to URLs. These objects\nare also known as bookmarks within the Box web application.\n\nWeb link objects are treated similarly to file objects,\nthey will also support most actions that apply to regular files.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this web link"
        },
        "type": {
          "type": "string",
          "description": "`web_link`",
          "enum": ["web_link"]
        },
        "etag": {
          "type": "string",
          "description": "The entity tag of this web link. Used with `If-Match`\nheaders."
        }
      }
    },
    "Group--Base": {
      "title": "Group (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard", "full"],
      "x-box-variant": "base",
      "description": "A base representation of a group.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for this object"
        },
        "type": {
          "type": "string",
          "description": "`group`",
          "enum": ["group"]
        }
      }
    },
    "EventSource": {
      "title": "Event source",
      "type": "object",
      "description": "The source file or folder that triggered an event in\nthe event stream.",
      "properties": {
        "item_type": {
          "type": "string",
          "enum": ["file", "folder"],
          "description": "The type of the item that the event\nrepresents. Can be `file` or `folder`.\n"
        },
        "item_id": {
          "type": "string",
          "description": "The unique identifier that represents the\nitem.\n"
        },
        "item_name": {
          "type": "string",
          "description": "The name of the item.\n"
        },
        "parent": {
          "allOf": [
            {
              "$ref": "#/definitions/Folder--Mini"
            },
            {
              "description": "The optional folder that this folder is located within.\n\nThis value may be `null` for some folders such as the\nroot folder or the trash folder."
            }
          ]
        },
        "owned_by": {
          "allOf": [
            {
              "$ref": "#/definitions/User--Mini"
            },
            {
              "description": "The user who owns this item."
            },
            {}
          ]
        }
      }
    },
    "RetentionPolicy--Base": {
      "title": "Retention policy (Base)",
      "type": "object",
      "x-box-variants": ["base", "mini", "standard"],
      "x-box-variant": "base",
      "description": "The bare basic representation of a file version, the minimal\namount of fields returned when using the `fields` query\nparameter.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier that represent a file version."
        },
        "type": {
          "type": "string",
          "description": "`retention_policy`",
          "enum": ["retention_policy"]
        }
      }
    },
    "SignRequestSignerInput": {
      "title": "Sign Request Signer Input",
      "type": "object",
      "description": "Input created by a Signer on a Sign Request",
      "required": ["page_index"],
      "allOf": [
        {
          "$ref": "#/definitions/SignRequestPrefillTag"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "enum": ["signature", "date", "text", "checkbox"],
              "description": "Type of input"
            },
            "page_index": {
              "type": "integer",
              "description": "Index of page that the input is on"
            }
          }
        }
      ]
    },
    "Workflow--Mini": {
      "title": "Workflow (Mini)",
      "type": "object",
      "x-box-variants": ["mini", "standard", "full"],
      "x-box-variant": "mini",
      "description": "Box Relay Workflows are objects that represent a named collection of flows.\n\nYou application must be authorized to use the `Manage Box Relay` application\nscope within the developer console in order to use this resource.",
      "properties": {
        "id": {
          "type": "string",
          "description": "The unique identifier for the workflow"
        },
        "type": {
          "type": "string",
          "description": "`workflow`",
          "enum": ["workflow"]
        },
        "name": {
          "type": "string",
          "description": "The name of the workflow"
        },
        "description": {
          "type": "string",
          "description": "The description for a workflow."
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Specifies if this workflow is enabled"
        }
      }
    }
  }
}
